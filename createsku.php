<?phprequire_once('inc/_init.php');require_once('inc/functions/general.php');error_reporting(E_ALL | E_STRICT);if($lghsh['Id'] == 0){	require_once('inc/functions/authorization.php'); 	$pgcontent = logform(); 	$page_title       = 'WC Terminal LogIn';	$page_description = '';	$keywords         = '';	$head_ext         = '';	require_once('inc/_shell.php'); ///	exit;	}include_once 'inc/functions.php';//require_once("../wp-load.php");//exit;setlocale(LC_MONETARY, 'en_US');$msg = NULL;require_once 'wconfig.php';$reqntnt = NULL;$list = array();foreach($_POST['vn_skubx'] as $tid){	$mr = prsvpricelst($tid);//echo $mr[0].'::'.$mr[1].'::'.$mr[2].'::'.$mr[3].'::'.$mr[4].'::'.$mr[5].'::'.$mr[6].'::'.$mr[7].'::'.$mr[8].'<br>';	//	$th = getblhshbysku('cr_vndpl', $mr[0]);//	echo $th['Sku'].' - '.$th['Ln'].' - '.$th['VPr'].'<br>';//echo $_GET['br'];	//echo $mr[0].' - '.$mr[1].' - '.$mr[2].' - '.$mr[3].' - '.$mr[4].'<br>';//	array_push($list, array($th['Sku'], $th['Ln'], $th['Title'], $th['VPr'], $th['UData']));//echo $mr[0].'<br>';	array_push($list, $mr);	}//drc($list);/////////////*  ///////////////////// $bar = array();$vnd = NULL;switch($_GET['br']){	case 'aurafina':			$vnd='af';		break;	case 'cnc':					$vnd='cnc';		break;	case 'cubitac':				$vnd='cbt';		break;	case 'forevermark':			$vnd='fm';		break;	case 'ghi':					$vnd='ghi';		break;	case 'feather-lodge':		$vnd='fl';		break;	case 'us-cabinet-depot':	$vnd='uscd';	break;	case 'wlf': 				$vnd='wlf';		break;	default: break;}//echo $vnd;$pi = 0;$itfr = '<br><br><style>.vtbl{	width: 100%;	margin: 0px;	background: #eee;	font-size: 11px;}.vtbl td{	background: #fff;	padding: 5px;}.vtbl input, .vtbl input:focus{	outline: none;	border: none;	font-size: 11px;}</style><script>function fllfld(on,n){ var ev = document.getElementsByName(on)[n];//var ev = on.value;alert(ipublishercr.fs_tag[0]);return;// ipublishercr.fs_tag.forEach(function(element) { // // console.log(element)// alert(element);// });// fs_tag.foreach(function(tf){		// alert("gut");	// //	fs_tag[2][0].value = ev.value+"h";// //	tf.value = ev.value+"h";	// });		}</script><form action="#" method="post" name="ipublishercr" enctype="multipart/form-data" style="margin: 0px;"><table cellpadding="0" cellspacing="1" class="vtbl"><tr><th colspan="11" style="padding: 3px; text-align: right;"><input type="submit" name="submit2publish" value="Publish to WC" style="padding: 3px; border: solid 1px #005; cursor: pointer;" /></th></tr><tr><th></th>	<th></th>	<th></th>	<th></th>	<th></th>	<th colspan="2">			</th>	<th></th>	<th><input type="text" id="g_tag" name="g_tag" value="" /><input type="button" name="put_tag" value="Put" OnClick="fllfld(\'g_tag\', 0);" /></th>	<th></th></tr><tr><th></th>	<th></th>	<th>Sku</th>	<th>Prf</th>	<th>RPr</th>	<th colspan="2">Title / Description / Short description 	<a style="cursor: pointer; color: #f90;" title="Copy above data" OnClick="dscopy(1);">Copy</a>	<a style="cursor: pointer; color: #f90;" title="Clear all" OnClick="dscopy(0);">Clr</a></th>	<th>Category</th>	<th>Tags</th>	<th>Img</th>	<th style="width: 200px;"></th></tr>';foreach($list as $r){	$fsku=$r[0];	$pr = $r[1];	$ir = array();	$ttl = $slg = $vn = $wcsku = NULL;	$cat = NULL;	$tag = NULL;//echo $pr.'<br>';//	$r[7] = (isset($r[7]))?$r[7]:NULL;$bst_0 = 0;	switch($vnd){		case 'af':  /////////////////////////////////  CNC Cabinetry//			$ir = hgnric($r, $vnd);			$sku = $r[0];//echo $pr.'<br>';			$ir['ttl'] = array('Aurafina');  			$ir['cat'] = array('Bathroom Cabinets', 'Aurafina');			$ir['tag'] = array('aurafina');  			if(preg_match("/3020$pr$/", $sku) OR preg_match("/30$pr$/", $sku, $m)){ array_push($ir['tag'], 'width-30', 'bowls-1'); }			if(preg_match("/36$pr$/", $sku)){ array_push($ir['tag'], 'width-36', 'bowls-1'); }			if(preg_match("/48$pr$/", $sku)){ array_push($ir['tag'], 'width-48', 'bowls-1'); }			if(preg_match("/60$pr$/", $sku)){ array_push($ir['tag'], 'width-60', 'bowls-2'); }			if(preg_match("/LINEN$pr$/", $sku)){ array_push($ir['tag'], 'linen-cabinet-bath'); }			if(preg_match("/MIRROR$pr$/", $sku)){ array_push($ir['tag'], 'bathroom-mirror'); }			switch($pr){				case 'PW':						array_push($ir['ttl'], 'Cunningham', 'Plantation White');					array_push($ir['tag'], 'cunningham', 'plantation-white'); 						break;				case 'HB':						array_push($ir['ttl'], 'Cunningham', 'Harbor Blue');					array_push($ir['tag'], 'cunningham', 'harbor-blue');							break;				case 'RW': 						array_push($ir['ttl'], 'Wainwright', 'Rustic White');					array_push($ir['tag'], 'wainwright', 'rustic-white');							break;				case 'OHG': 					array_push($ir['ttl'], 'Wainwright', 'Old Harbor Grey');					array_push($ir['tag'], 'wainwright', 'old-harbor-grey');						break;				default: break;				}			if(preg_match("/3020$pr$/", $sku) OR preg_match("/30$pr$/", $sku, $m)){ array_push($ir['tag'], 'width-30', 'bowls-1'); 				array_push($ir['ttl'], '30 Inch Wide', 'Bathroom Cabinet'); }			if(preg_match("/36$pr$/", $sku)){ array_push($ir['tag'], 'width-36', 'bowls-1'); array_push($ir['ttl'], '36 Inch Wide', 'Bathroom Cabinet'); }			if(preg_match("/48$pr$/", $sku)){ array_push($ir['tag'], 'width-48', 'bowls-1'); array_push($ir['ttl'], '48 Inch Wide', 'Bathroom Cabinet');}			if(preg_match("/60$pr$/", $sku)){ array_push($ir['tag'], 'width-60', 'bowls-2'); array_push($ir['ttl'], '60 Inch Wide', 'Bathroom Cabinet');}			if(preg_match("/LINEN$pr$/", $sku)){ array_push($ir['tag'], 'linen-cabinet-bath'); array_push($ir['ttl'], 'Bathroom Tall Cabinet');}			if(preg_match("/MIRROR$pr$/", $sku)){ array_push($ir['tag'], 'bathroom-mirror'); array_push($ir['ttl'], 'Bathroom Mirror');}			$sku = 'A-'.$sku;			$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/',' ',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			array_push($bar, array('sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[3],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));		break;						case 'cnc':  /////////////////////////////////  CNC Cabinetry//			$ir = hgnric($r, $vnd);			$sku = $r[0];			$ir['ttl'] = array('CNC');  			array_push($ir['ttl'], $r[2]); 			$ir['cat'] = array('Cabinets');			$ir['tag'] = array('cnc');  			if(preg_match("/(.*)(\d{2})(\d{2})(.*)/", $sku, $m)){ array_push($ir['tag'], 'height-'.$m[3]); }			$rta='';			$prf=NULL;			if(preg_match('/^([\w]{1,2})(R)([\d]{1,2})$/',$r[1], $m)){				array_push($ir['cat'], 'CNC RTA');				$rta = ' - RTA';				$prf = $m[1].$m[3];				}			else{ 				array_push($ir['cat'], 'CNC ASM');				$prf = $r[1]; 				}			if(preg_match('/^G/',$prf)){				array_push($ir['cat'], 'Granite Top');				array_push($ir['tag'], 'granite-top');				}			switch($prf){				//				case 'C1':		array_push($ir['cat'], 'CNC Country Oak Hud');			array_push($ir['tag'], 'country-oak-hud'); 			break;				case 'C4':				case 'CR4':		array_push($ir['cat'], 'CNC Country Oak');				array_push($ir['tag'], 'country-oak');				break;				case 'EB02':				case 'EBR02': 	array_push($ir['cat'], 'CNC Elegant Smoky Grey');		array_push($ir['tag'], 'elegant-smoky-grey');		break;//				case 'EB06': 	array_push($ir['cat'], 'CNC Elegant Cinnamon');			array_push($ir['tag'], 'elegant-cinnamon');			break;				case 'EB10':				case 'EBR10': 	array_push($ir['cat'], 'CNC Elegant White');			array_push($ir['tag'], 'elegant-white');			break;//				case 'EB11': 	array_push($ir['cat'], 'CNC Elegant Espresso');			array_push($ir['tag'], 'elegant-espresso');			break;				case 'EB21':				case 'EBR21': 	array_push($ir['cat'], 'CNC Elegant Ocean Blue');		array_push($ir['tag'], 'elegant-ocean-blue');		break;				case 'EB22':				case 'EBR22': 	array_push($ir['cat'], 'CNC Elegant Dove');				array_push($ir['tag'], 'elegant-dove');				break;				case 'EB23':				case 'EBR23': 	array_push($ir['cat'], 'CNC Elegant Stone');			array_push($ir['tag'], 'elegant-stone');			break;				case 'FB10':				case 'FBR10': 	array_push($ir['cat'], 'CNC Fashion White');			array_push($ir['tag'], 'fashion-white');			break;//				case 'FB13': 	array_push($ir['cat'], 'CNC Fashion Pearl');			array_push($ir['tag'], 'fashion-pearl');			break;				case 'FB21':				case 'FBR21': 	array_push($ir['cat'], 'CNC Fashion Ocean Blue');		array_push($ir['tag'], 'fashion-ocean-blue');		break;				case 'GABO': 	array_push($ir['cat'], 'CNC Absolute Black');		array_push($ir['tag'], 'absolute-black');		break;				case 'GAB': 	array_push($ir['cat'], 'CNC Sample');		array_push($ir['tag'], 'absolute-black');		break;				case 'GBWO': 	array_push($ir['cat'], 'CNC Burlywood');		array_push($ir['tag'], 'burlywood');		break;				case 'GBW': 	array_push($ir['cat'], 'CNC Sample');		array_push($ir['tag'], 'burlywood');		break;				case 'GCWO': 	array_push($ir['cat'], 'CNC Cara White');		array_push($ir['tag'], 'cara-white');		break;				case 'GCWS': 	array_push($ir['cat'], 'CNC Cara White');		array_push($ir['tag'], 'cara-white');		break;				case 'GCW': 	array_push($ir['cat'], 'CNC Sample');		array_push($ir['tag'], 'cara-white');		break;				case 'GGWS': 	array_push($ir['cat'], 'CNC Gazania White');		array_push($ir['tag'], 'gazania-white');		break;				case 'GGW': 	array_push($ir['cat'], 'CNC Sample');		array_push($ir['tag'], 'gazania-white');		break;				case 'GTSO': 	array_push($ir['cat'], 'CNC Tiger Skin');		array_push($ir['tag'], 'tiger-skin');		break;				case 'GTS': 	array_push($ir['cat'], 'CNC Sample');		array_push($ir['tag'], 'tiger-skin');		break;				case 'GUTO': 	array_push($ir['cat'], 'CNC Uba Tuba');		array_push($ir['tag'], 'uba-tuba');		break;				case 'GWTO': 	array_push($ir['cat'], 'CNC Wheat');		array_push($ir['tag'], 'wheat');		break;				case 'GWT': 	array_push($ir['cat'], 'CNC Sample');		array_push($ir['tag'], 'wheat');		break;//				case 'FB22': 	array_push($ir['cat'], 'CNC Fashion Dove');				array_push($ir['tag'], 'fashion-dove');				break;//				case 'HB13': 	array_push($ir['cat'], 'CNC Harmony Pearl');			array_push($ir['tag'], 'harmony-pearl');			break;				case 'L02':				case 'LR02': 	array_push($ir['cat'], 'CNC Luxor Smoky Grey');			array_push($ir['tag'], 'luxor-smoky-grey');			break;//				case 'L06': 	array_push($ir['cat'], 'CNC Luxor Cinnamon');			array_push($ir['tag'], 'luxor-cinnamon');			break;				case 'L10':				case 'LR10': 	array_push($ir['cat'], 'CNC Luxor White');				array_push($ir['tag'], 'luxor-white');				break;				case 'L11':				case 'LR11': 	array_push($ir['cat'], 'CNC Luxor Espresso');			array_push($ir['tag'], 'luxor-espresso');			break;				case 'M14': 	array_push($ir['cat'], 'CNC Milano White');				array_push($ir['tag'], 'milano-white');				break;				case 'M15': 	array_push($ir['cat'], 'CNC Milano Slate');				array_push($ir['tag'], 'milano-slate');				break;				case 'M18': 	array_push($ir['cat'], 'CNC Matrix Silver');			array_push($ir['tag'], 'matrix-silver');			break;				case 'M19': 	array_push($ir['cat'], 'CNC Matrix Greystone');			array_push($ir['tag'], 'matrix-greystone');			break;				case 'MT2':				case 'MT3': 	array_push($ir['cat'], 'CNC Cultured Marble Top');		array_push($ir['tag'], 'cultured-marble-top');		break;				case 'MTS2': 	array_push($ir['cat'], '');		array_push($ir['tag'], '');		break;//				case 'PB06': 	array_push($ir['cat'], 'CNC Park Avenue Cinnamon');		array_push($ir['tag'], 'park-avenue-cinnamon');		break;				case 'PB10':				case 'PBR10': 	array_push($ir['cat'], 'CNC Park Avenue White');		array_push($ir['tag'], 'park-avenue-white');		break;				case 'PB21':				case 'PBR21': 	array_push($ir['cat'], 'CNC Park Avenue Ocean Blue');	array_push($ir['tag'], 'park-avenue-ocean-blue');	break;				case 'RB10':				case 'RBR10': 	array_push($ir['cat'], 'CNC Richmond White');			array_push($ir['tag'], 'richmond-white');			break;				case 'RB23':				case 'RBR23': 	array_push($ir['cat'], 'CNC Richmond Stone');			array_push($ir['tag'], 'richmond-stone');			break;//				case 'S11': 	array_push($ir['cat'], 'CNC Sierra Espresso');			array_push($ir['tag'], 'sierra-espresso');			break;//				case 'S8':  	array_push($ir['cat'], 'CNC Sierra Toffee');			array_push($ir['tag'], 'sierra-toffee');			break;//				case 'VB10': 	array_push($ir['cat'], 'CNC Victoria White');			array_push($ir['tag'], 'victoria-white');			break;//				case 'VB22': 	array_push($ir['cat'], 'CNC Victoria Dove');			array_push($ir['tag'], 'victoria-dove');			break;				case 'VG10':				case 'VGR10': 	array_push($ir['cat'], 'CNC Vanguard White');			array_push($ir['tag'], 'vanguard-white');			break;				case 'VG11':				case 'VGR11': 	array_push($ir['cat'], 'CNC Vanguard Espresso');		array_push($ir['tag'], 'vanguard-espresso');		break;				case 'VG22':				case 'VGR22': 	array_push($ir['cat'], 'CNC Vanguard Dove');			array_push($ir['tag'], 'vanguard-dove');			break;				case 'VG26':				case 'VGR26': 	array_push($ir['cat'], 'CNC Vanguard Indigo');			array_push($ir['tag'], 'vanguard-indigo');			break;				case 'CT' : 	array_push($ir['cat'], 'CNC Modifications');			array_push($ir['tag'], 'modifications');			break;				case 'DISP': 	array_push($ir['cat'], '');		array_push($ir['tag'], '');		break;				default: break;				}			switch($r[4]){				case 'CABINET BASE':	 array_push($ir['tag'], 'base-cabinet'); 		break;				case 'CABINET WALL':	 array_push($ir['tag'], 'wall-cabinet');		break;				case 'CABINET TALL':	 array_push($ir['tag'], 'tall-cabinets');		break;				case 'MEDICINE CABINET': array_push($ir['tag'], 'medicine-cabinets'); 	break;				case 'ACCESSORY':		 array_push($ir['tag'], 'accessories');			break;				case 'GRANITE TOP':		 array_push($ir['tag'], '');			break;				case 'SAMPLE':		 array_push($ir['tag'], '');			break;				case 'SAMPLE DOOR':		 array_push($ir['tag'], 'sample-doors');		break;				case 'DOOR':			 array_push($ir['tag'], 'doors');				break;				case 'CORNER':			 array_push($ir['tag'], 'corners');				break;				case 'HOOD':			 array_push($ir['tag'], 'hoods');				break;				case 'VANITY':			 array_push($ir['tag'], 'vanity');				break;				case 'MARBLE TOP':		 array_push($ir['tag'], 'marble-tops');			break;				case 'CHARGE':			 array_push($ir['tag'], 'charges');				break;				}						$ttl = join(' ', preg_replace('/^Rta /','',$ir['ttl'])).$rta.' - '.$sku;			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/',' ',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			array_push($bar, array('sku_body'=>$r[0], 'sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[3],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));		break;						case 'cbt':  /////////////////////////////////  Cubitac Cabinetry			$sku = $r[1].'-'.$r[0];			$ir['ttl'] = array('Cubitac');  			$ir['cat'] = array();			if(preg_match('VANITY',$r[2])){ array_push($ir['cat'], 'Vanities'); }			else{ array_push($ir['cat'], 'Cabinets'); }			$ir['tag'] = array('cubitac');  			$rta='';			$prf = $r[1];			// if(preg_match('/^([\w]{1,2})(R)([\d]{1,2})$/',$r[1], $m)){				// array_push($ir['cat'], 'CNC RTA');				// $rta = ' - RTA';				// $prf = $m[1].$m[3];				// }			// else{ 				// array_push($ir['cat'], 'CNC ASM');				// $prf = $r[1]; 				// }			switch($prf){				case 'CD':					array_push($ir['ttl'], 'Dover Cafe');					array_push($ir['cat'], 'Cubitac Dover Cafe');					array_push($ir['tag'], 'dover-cafe'); 			break;				case 'CN':							array_push($ir['ttl'], 'Newport Cafe');					array_push($ir['cat'], 'Cubitac Newport Cafe');								array_push($ir['tag'], 'newport-cafe');			break;				case 'LD':							array_push($ir['ttl'], 'Dover Latte');								array_push($ir['cat'], 'Cubitac Dover Latte');								array_push($ir['tag'], 'dover-latte');			break;				case 'SD':							array_push($ir['ttl'], 'Dover Shale');								array_push($ir['cat'], 'Cubitac Dover Shale');								array_push($ir['tag'], 'dover-shale');			break;				case 'LM':							array_push($ir['ttl'], 'Milan Latte');					array_push($ir['cat'], 'Cubitac Milan Latte');					array_push($ir['tag'], 'milan-latte');			break;				case 'SM':							array_push($ir['ttl'], 'Milan Shale');					array_push($ir['cat'], 'Cubitac Milan Shale');					array_push($ir['tag'], 'milan-shale');			break;				case 'LN':							array_push($ir['ttl'], 'Newport Latte');					array_push($ir['cat'], 'Cubitac Newport Latte');					array_push($ir['tag'], 'newport-latte');		break;				case 'CBG':							array_push($ir['ttl'], 'Belmont Cafe Glaze');					array_push($ir['cat'], 'Cubitac Belmont Cafe Glaze');					array_push($ir['tag'], 'belmont-cafe-glaze');	break;				case 'ILB':					array_push($ir['ttl'], 'Bergen Latte');					array_push($ir['cat'], 'Cubitac Bergen Latte');					array_push($ir['tag'], 'bergen-latte');			break;				case 'ISB':					array_push($ir['ttl'], 'Bergen Shale');					array_push($ir['cat'], 'Cubitac Bergen Shale');					array_push($ir['tag'], 'bergen-shale');			break;				case 'LNCG':					array_push($ir['ttl'], 'Sofia Caramel Glaze');					array_push($ir['cat'], 'Cubitac Sofia Caramel Glaze');					array_push($ir['tag'], 'sofia-caramel-glaze');	break;				case 'LNPG':					array_push($ir['ttl'], 'Sofia Pewter Glaze');					array_push($ir['cat'], 'Cubitac Sofia Pewter Glaze');					array_push($ir['tag'], 'sofia-pewter-glaze');	break;				case 'LNSG':					array_push($ir['ttl'], 'Sofia Sable Glaze');					array_push($ir['cat'], 'Cubitac Sofia Sable Glaze');					array_push($ir['tag'], 'sofia-sable-glaze');	break;				case 'LMD':					array_push($ir['ttl'], 'Madison Latte');					array_push($ir['cat'], 'Cubitac Madison Latte');					array_push($ir['tag'], 'madison-latte');		break;				case 'DMD':					array_push($ir['ttl'], 'Madison Dusk');					array_push($ir['cat'], 'Cubitac Madison Dusk');					array_push($ir['tag'], 'madison-dusk');			break;				case 'MMD':					array_push($ir['ttl'], 'Madison Midnight');					array_push($ir['cat'], 'Cubitac Madison Midnight');					array_push($ir['tag'], 'madison-midnight');		break;				case 'BLR':					array_push($ir['ttl'], 'Ridgefield Latte');					array_push($ir['cat'], 'Cubitac Ridgefield Latte');					array_push($ir['tag'], 'ridgefield-latte');		break;				case 'BPR':					array_push($ir['ttl'], 'Ridgefield Pastel');					array_push($ir['cat'], 'Cubitac Ridgefield Pastel');					array_push($ir['tag'], 'ridgefield-pastel');		break;				case 'BLO':					array_push($ir['ttl'], 'Oxford Latte');					array_push($ir['cat'], 'Cubitac Oxford Latte');					array_push($ir['tag'], 'oxford-latte');		break;				case 'BPO':					array_push($ir['ttl'], 'Oxford Pastel');					array_push($ir['cat'], 'Cubitac Oxford Pastel');					array_push($ir['tag'], 'oxford-pastel');		break;				default: break;				}			// switch($r[4]){				// case 'CABINET BASE':	 array_push($ir['tag'], 'base-cabinet'); 		break;				// case 'CABINET WALL':	 array_push($ir['tag'], 'wall-cabinet');		break;				// case 'CABINET TALL':	 array_push($ir['tag'], 'tall-cabinets');		break;				// case 'MEDICINE CABINET': array_push($ir['tag'], 'medicine-cabinets'); 	break;				// case 'ACCESSORY':		 array_push($ir['tag'], 'accessories');			break;				// case 'SAMPLE DOOR':		 array_push($ir['tag'], 'sample-doors');		break;				// case 'DOOR':			 array_push($ir['tag'], 'doors');				break;				// case 'CORNER':			 array_push($ir['tag'], 'corners');				break;				// case 'HOOD':			 array_push($ir['tag'], 'hoods');				break;				// case 'VANITY':			 array_push($ir['tag'], 'vanity');				break;				// case 'MARBLE TOP':		 array_push($ir['tag'], 'marble-tops');			break;				// case 'CHARGE':			 array_push($ir['tag'], 'charges');				break;				// }			if(	preg_match('/^(W)([\d]{1})([\d]{2})$/', $r[0], $m) ){ 				array_push($ir['tag'], 'wall-cabinet');				array_push($ir['tag'], 'height-'.$m[3]);					if($m[2]<=21)	{ array_push($ir['tag'], 'single-door'); }					else 			{ array_push($ir['tag'], 'double-door'); }					}			if(	preg_match('/^(W)([\d]{2})([\d]{2})$/', $r[0], $m) ){ 				array_push($ir['tag'], 'wall-cabinet');				array_push($ir['tag'], 'height-'.$m[3]);					if($m[2]<=21)	{ array_push($ir['tag'], 'single-door'); }					else 			{ array_push($ir['tag'], 'double-door'); }					}			if(	preg_match('/^(BSPO)(\d)$/', $r[0], $m) ){ array_push($ir['tag'], 'base-cabinet'); array_push($ir['tag'], 'base-cabinet-other'); array_push($ir['tag'], 'single-door'); }			if(	preg_match('/^(FLOATING SHELF-)([\d]{2})$/', $r[0], $m) ){ array_push($ir['tag'], 'accessories'); array_push($ir['tag'], 'accessories-other'); }			if(	preg_match('/^CRM2/', $r[0], $m) ){ array_push($ir['tag'], 'accessories'); array_push($ir['tag'], 'molding'); }			if(	preg_match('/^RCRM2/', $r[0], $m) ){ array_push($ir['tag'], 'accessories'); array_push($ir['tag'], 'molding'); }			if(	preg_match('/^(BWBK)([\d]{2})$/', $r[0], $m) ){ 				array_push($ir['tag'], 'accessories');				array_push($ir['tag'], 'trash-can-insert');				}			if(	preg_match('/^(SC-BWBK)([\d]{2})$/', $r[0], $m) ){ 				array_push($ir['tag'], 'accessories');				array_push($ir['tag'], 'trash-can-insert');				}			array_push($ir['ttl'], ucwords(strtolower($r[2]))); //			array_push($ir['tag'], preg_replace('/[\s]{1,3}/','-',strtolower($r[4]))); 						$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/',' ',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			array_push($bar, array('sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[3],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));			break;						case 'fm':  /////////////////////////////////  Forevermark  ////////////////////////////////////////		$ir = hgnric($r, $vnd);		if(isset($ir['sku'])){ array_push($bar, $ir); }		else{				$ir['ttl'] = array();  			$ir['cat'] = array(); //'Cabinets';			$ir['tag'] = array('forevermark');  			switch($r[1]){				case 'KC': array_push($ir['ttl'], 'Forevermark Cherry Glaze');				array_push($ir['cat'], 'Forevermark Cherry Glaze');				array_push($ir['tag'], 'cherry-glaze');				break;				case 'KM': array_push($ir['ttl'], 'Forevermark Cinnamon Glaze');			array_push($ir['cat'], 'Forevermark Cinnamon Glaze');			array_push($ir['tag'], 'cinnamon-glaze');			break;				case 'KE': array_push($ir['ttl'], 'Forevermark Espresso');					array_push($ir['cat'], 'Forevermark Espresso');					array_push($ir['tag'], 'espresso');					break;				case 'GW': array_push($ir['ttl'], 'Forevermark Gramercy White');			array_push($ir['cat'], 'Forevermark Gramercy White');			array_push($ir['tag'], 'gramercy-white');			break;				case 'AG': array_push($ir['ttl'], 'Forevermark Greystone Shaker');			array_push($ir['cat'], 'Forevermark Greystone Shaker');			array_push($ir['tag'], 'greystone-shaker');			break;				case 'AW': array_push($ir['ttl'], 'Forevermark Ice White Shaker');			array_push($ir['cat'], 'Forevermark Ice White Shaker');			array_push($ir['tag'], 'ice-white-shaker');			break;				case 'KW': array_push($ir['ttl'], 'Forevermark K-Series White');			array_push($ir['cat'], 'Forevermark K-Series White');			array_push($ir['tag'], 'k-series-white');			break;				case 'AB': array_push($ir['ttl'], 'Forevermark Lait Grey Shaker');			array_push($ir['cat'], 'Forevermark Lait Grey Shaker');			array_push($ir['tag'], 'lait-grey-shaker');			break;				case 'TG': array_push($ir['ttl'], 'Forevermark Midtown Grey');				array_push($ir['cat'], 'Forevermark Midtown Grey');				array_push($ir['tag'], 'midtown-grey');				break;				case 'AN': array_push($ir['ttl'], 'Forevermark Nova Light Grey');			array_push($ir['cat'], 'Forevermark Nova Light Grey');			array_push($ir['tag'], 'nova-light-grey');			break;				case 'AP': array_push($ir['ttl'], 'Forevermark Pepper Shaker'); 			array_push($ir['cat'], 'Forevermark Pepper Shaker');			array_push($ir['tag'], 'pepper-shaker');			break;				case 'VW': array_push($ir['ttl'], 'Forevermark Rio Vista White Shaker');	array_push($ir['cat'], 'Forevermark Rio Vista White Shaker');	array_push($ir['tag'], 'rio-vista-white-shaker');	break;				case 'MR': array_push($ir['ttl'], 'Forevermark Sienna Rope');				array_push($ir['cat'], 'Forevermark Sienna Rope');				array_push($ir['tag'], 'sienna-rope');				break;				case 'SL': array_push($ir['ttl'], 'Forevermark Signature Pearl');			array_push($ir['cat'], 'Forevermark Signature Pearl');			array_push($ir['tag'], 'signature-pearl');			break;				case 'TQ': array_push($ir['ttl'], 'Forevermark Townplace Crema');			array_push($ir['cat'], 'Forevermark Townplace Crema');			array_push($ir['tag'], 'townplace-crema');			break;				case 'TS': array_push($ir['ttl'], 'Forevermark Townsquare Grey');			array_push($ir['cat'], 'Forevermark Townsquare Grey');			array_push($ir['tag'], 'townsquare-grey');			break;				case 'TW': array_push($ir['ttl'], 'Forevermark Uptown White');				array_push($ir['cat'], 'Forevermark Uptown White');				array_push($ir['tag'], 'uptown-white');				break;				default: break;				}//			if(isset($ir['ttl'][1])){ $ir['tag'][1] = preg_replace('/[\s]{1,3}/','-',strtolower($ir['ttl'][1])); }						$sk = $r[0]; //preg_replace("/^G/",'',$r[0]);//			$sk = preg_replace("/$pr$/",'',$sk);//echo $sk.'<br>';			if(preg_match('/^W(\d{2})(\d{2})/',$sk,$m)){ 				array_push($ir['ttl'], 'Wall Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' H'.($m[2]*1));				array_push($ir['cat'], 'Cabinets');				array_push($ir['tag'], 'wall-cabinet');				array_push($ir['tag'], 'height-'.($m[2]*1));				if(($m[1]*1)<24){ array_push($ir['tag'], 'single-door'); }//				else { array_push($ir['tag'], 'double-door'); }				}			if(preg_match('/B$/',$sk)) { array_push($ir['tag'], 'double-door'); }			if(preg_match('/^WDC(\d{2})(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Wall Diagonal Corner Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' H'.($m[2]*1));				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'diagonals'); 				array_push($ir['tag'], 'wall-cabinet'); 				array_push($ir['tag'], 'height-'.($m[2]*1));				}			if(preg_match('/^WSQ(\d{2})(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Wall Corner Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' H'.($m[2]*1));				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'corners'); 				array_push($ir['tag'], 'wall-cabinet'); 				array_push($ir['tag'], 'height-'.($m[2]*1));				}			if(preg_match('/^W2D(\d{2})(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Wall Cabinet - 2 Built-in Drawers');				array_push($ir['ttl'], 'W'.($m[1]*1).' H'.($m[2]*1));				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'wall-cabinet'); 				array_push($ir['tag'], 'wall-cabinet-other'); 				array_push($ir['tag'], 'height-'.($m[2]*1));				if(($m[2]*1)>=48){ array_push($ir['tag'], 'wall-tall'); }				}			if(preg_match('/^BFP(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Base Pullout Cabinet With Spice Rack');				array_push($ir['ttl'], 'W'.($m[1]*1).' x H34-1/2');				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'base-cabinet'); 				array_push($ir['tag'], 'base-cabinet-other'); 				array_push($ir['tag'], 'pull-out-cabinet'); 				}			if(preg_match('/^SB(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Sink Base Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' x H34-1/2');				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'base-cabinet'); 				array_push($ir['tag'], 'sink-base'); 				}			if(preg_match('/^FSB(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Farm Sink Base Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' x H34-1/2');				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'base-cabinet'); 				array_push($ir['tag'], 'sink-base'); 				}			if(preg_match('/^FB(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Base Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' x H34-1/2');				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'base-cabinet'); 				if(($m[1]*1)<24){ array_push($ir['tag'], 'single-door'); }				}			if(preg_match('/^WBLC(\d{2})\/(\d{2})-(\d{2})(\d{2})/', $sk, $m)){ 				array_push($ir['ttl'], 'Wall Blind Corner Cabinet');				array_push($ir['ttl'], 'W'.($m[1]*1).' x H'.($m[3]*1));				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'wall-cabinet'); 				array_push($ir['tag'], 'corners'); 				array_push($ir['tag'], 'height-'.($m[3]*1));				}			if(preg_match('/SAMPLEDR/',$sk)){ $bst_0 = 1; $r[2]=45;				array_push($ir['cat'], 'Sample Doors');				array_push($ir['ttl'], 'Sample Door'); 				array_push($ir['tag'], 'accessories'); 				array_push($ir['tag'], 'accessories-other'); 				}			// if(preg_match('/W[\d]{1,}/',$sk))  { 				// $ir['ttl'][9] = 'Wall Cabinet'; 				// array_push($ir['cat'], 'Cabinets'); 				// array_push($ir['tag'], 'wall-cabinet'); 				// }			if(preg_match('/MGD/',$sk)){ 				$ir['ttl'][10] = 'Mullion Glass Door'; 				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'glass-doors'); 				}			if(preg_match('/GD/',$sk)) { 				$ir['ttl'][10] = 'Glass Door'; 				array_push($ir['cat'], 'Cabinets'); 				array_push($ir['tag'], 'glass-doors'); 				}			$fdx = get_findx($ir['ttl']);			if(preg_match('/([\D]{1,6})([\d]{1,6})/',$sk,$m)){				if(preg_match('/M/',$m[1])){ 					$ir['ttl'][$fdx] = 'Microwave'; 					$ir['tag'][4] = 'base-cabinet-other'; 					$ir['tag'][5] = 'microwave'; 					}				if(preg_match('/LRM/',$m[1])){ 					$ir['ttl'][$fdx] = 'Light Rail Molding'; 					$ir['tag'][4] = 'accessories'; 					$ir['tag'][5] = 'molding'; 					}				$fdx = get_findx($ir['ttl']);				// if(preg_match('/B/',$m[1])){ 					// $ir['ttl'][$fdx] = 'Base';					// $ir['ttl'][$fdx+1] = 'Cabinet';//					$ir['ttl'][9] = 'Base Cabinet'; 					// $ir['tag'][2] = 'base-cabinet'; 					// }				}			//			if(array_search('Cabinet', $ir['ttl'])){ array_push($ir['cat'], 'Cabinets'); }//			if(isset($ir['ttl'][1]) AND !$bst_0){ $ir['cat'][1] = $ir['ttl'][0].' '.$ir['ttl'][1]; }			ksort($ir['ttl']);			ksort($ir['cat']);			ksort($ir['tag']);			$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/','',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$sku = preg_replace("/$r[1]/","-$r[1]",$r[0]);			$sku = preg_replace("/[-]{2,3}/","-",$sku);						$sku = $r[1].'-'.$sku;						$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			array_push($bar, array('sku_body'=>$r[0], 'sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[3],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));			}		//$ttl = 	$vn .' '.$stl.' '.$t1.' '.$t2.' '.$t3;		break;								case 'ghi':  /////////////////////////////////  GHI		$ir = hgnric($r, $vnd);		if(isset($ir['sku'])){ array_push($bar, $ir); }		else{				$ir['ttl'] = array($r[4]);  			$ir['cat'] = array('Cabinets');			$ir['tag'] = array('ghi');//echo $r[3].'<br>';						switch($r[3]){	//			case 'WDC': $ir['ttl'][1] = ''; break;	//			case 'CCB': $ir['ttl'][1] = ''; break;				case 'RGO':	array_push($ir['cat'], 'GHI Regal Oak');	array_push($ir['tag'], 'regal-oak'); break;				case 'CTC':	array_push($ir['cat'], 'GHI Charleston Traditional Cognac');	array_push($ir['tag'], 'charleston-traditional-cognac');	break;				case 'RMA':	array_push($ir['cat'], 'GHI Richmond Auburn');	array_push($ir['tag'], 'richmond-auburn');	break;				case 'NCG':	array_push($ir['cat'], 'GHI New Castle Gray');		array_push($ir['tag'], 'new-castle-gray');	break;				case 'NTL':	array_push($ir['cat'], 'GHI Nantucket Linen');	array_push($ir['tag'], 'nantucket-linen');	break;				case 'SHG': array_push($ir['cat'], 'GHI Stone Harbor Gray');	array_push($ir['tag'], 'stone-harbor-gray');	break;				case 'ACL':	array_push($ir['cat'], 'GHI Arcadia Linen');	array_push($ir['tag'], 'arcadia-linen');	break;				case 'ACW': array_push($ir['cat'], 'GHI Arcadia White Shaker');	array_push($ir['tag'], 'arcadia-white-shaker');	break;				case 'SDC':	array_push($ir['cat'], 'GHI Sedona Chestnut');	array_push($ir['tag'], 'sedona-chestnut');	break;				case 'PCG':	array_push($ir['cat'], 'GHI Pacific Gray Shaker');	array_push($ir['tag'], 'pacific-gray-shaker');	break;				case 'CCB':	array_push($ir['cat'], 'GHI Concord Blue');	array_push($ir['tag'], 'concord-blue');	break;				default: break;				}			if(isset($ir['ttl'][1])){ $ir['tag'][1] = preg_replace('/[\s]{1,3}/','-',strtolower($ir['ttl'][1])); }			$sku = $r[6];			if(preg_match('/^GB/',$sku)){ 					array_push($ir['ttl'], 'Base Cabinet'); 					array_push($ir['tag'], 'base-cabinet'); 					}			if(preg_match('/^GDB/',$sku)){ 					array_push($ir['ttl'], 'Base Cabinet'); 					array_push($ir['tag'], 'base-cabinet','drawer-base'); 					}			if(preg_match('/^GSB/',$sku)){ 					array_push($ir['ttl'], 'Sink Base Cabinet'); 					array_push($ir['tag'], 'base-cabinet','sink-base'); 					}			if(preg_match('/^GFSB/',$sku)){ 					array_push($ir['ttl'], 'Farm Sink Base Cabinet'); 					array_push($ir['tag'], 'base-cabinet','sink-base','farm-sink-base'); 					}			if(preg_match('/^GW/',$sku)){ 					array_push($ir['ttl'], 'Wall Cabinet'); 					array_push($ir['tag'], 'wall-cabinet'); 					}			if(preg_match('/^GV/',$sku)){ 					array_push($ir['tag'], 'vanity'); 					}						$sk = preg_replace("/^G/",'',$r[0]);			$sk = preg_replace("/$pr$/",'',$sk);			if(preg_match('/SAMPLEDR/',$sk)){ $bst_0 = 1; $r[2]=45;				array_push($ir['cat'], 'Sample Doors');				array_push($ir['ttl'], 'Sample Door'); 				array_push($ir['tag'], 'accessories'); 				array_push($ir['tag'], 'accessories-other'); 				}			if(preg_match('/WDC/',$sk)){ $ir['ttl'][9] = 'Wall Diagonal Corner Cabinet'; }			$fdx = get_findx($ir['ttl']);			if(preg_match('/([\D]{1,6})([\d]{1,6})/',$sk,$m)){				if(preg_match('/M/',$m[1])){ 					$ir['ttl'][$fdx] = 'Microwave'; 					$ir['tag'][3] = 'base-cabinet-other'; 					$ir['tag'][4] = 'microwave'; 					}				if(preg_match('/LRM/',$m[1])){ 					$ir['ttl'][$fdx] = 'Light Rail Molding'; 					$ir['tag'][3] = 'accessories'; 					$ir['tag'][4] = 'molding'; 					}				$fdx = get_findx($ir['ttl']);				if(preg_match('/W/',$m[1])){ 					$ir['ttl'][$fdx] = 'Wall';					$ir['ttl'][$fdx+1] = 'Cabinet';//					$ir['ttl'][9] = 'Base Cabinet'; 					$ir['tag'][2] = 'wall-cabinet'; 					}				}			//			if(array_search('Cabinet', $ir['ttl'])){ array_push($ir['cat'], 'Cabinets'); }//			if(isset($ir['ttl'][1]) AND !$bst_0){ $ir['cat'][1] = $ir['ttl'][0].' '.$ir['ttl'][1]; }			ksort($ir['ttl']);			ksort($ir['cat']);			ksort($ir['tag']);			$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/','',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$sku = $r[6]; //preg_replace("/$r[1]/","-$r[1]",$r[0]);//			$sku = preg_replace("/[-]{2,3}/","-",$sku);									$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			array_push($bar, array('sku_body'=>$r[0],'sku'=>$sku,'prf'=>$r[3],'rpr'=>$r[7],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));			}		//$ttl = 	$vn .' '.$stl.' '.$t1.' '.$t2.' '.$t3;		break;		case 'fl':  /////////////////////////////////  Feather Lodge		$ir = hgnric($r, $vnd);		if(isset($ir['sku'])){ array_push($bar, $ir); }		else{				$ir['ttl'] = array('Feather Lodge');  			$ir['cat'] = array(); //'Cabinets';			$ir['tag'] = array('feather-lodge');  			switch($r[1]){				case 'GRC': array_push($ir['ttl'], 'Grand Reserve Cherry'); break;				case 'NPW': array_push($ir['ttl'], 'Newport White');        break;				default: break;				}			if(isset($ir['ttl'][1])){ $ir['tag'][1] = preg_replace('/[\s]{1,3}/','-',strtolower($ir['ttl'][1])); }						$sk = preg_replace("/^F/",'',$r[0]);			$sk = preg_replace("/$pr$/",'',$sk);			if(preg_match('/SAMPLEDR/',$sk)){ 				array_push($ir['cat'], 'Sample Doors');				array_push($ir['ttl'], 'Sample Door'); 				array_push($ir['tag'], 'accessories'); 				array_push($ir['tag'], 'accessories-other'); 				}			if(preg_match('/WDC/',$sk)){ $ir['ttl'][9] = 'Wall Diagonal Corner'; }			$fdx = get_findx($ir['ttl']);			if(preg_match('/([\D]{1,6})([\d]{1,6})/',$sk,$m)){				if(preg_match('/M/',$m[1])){ 					$ir['ttl'][$fdx] = 'Microwave'; 					$ir['tag'][3] = 'base-cabinet-other'; 					$ir['tag'][4] = 'microwave'; 					}				if(preg_match('/LRM/',$m[1])){ 					$ir['ttl'][$fdx] = 'Light Rail Molding'; 					$ir['tag'][3] = 'accessories'; 					$ir['tag'][4] = 'molding'; 					}				if(preg_match('/SGH/',$m[1])){ 					$ir['ttl'][$fdx] = 'Stem Glass Holder'; 					$ir['tag'][3] = 'accessories'; 					$ir['tag'][4] = 'accessories-other'; 					}				$fdx = get_findx($ir['ttl']);				if(preg_match('/B/',$m[1])){ 					$ir['ttl'][$fdx] = 'Base';					$ir['ttl'][$fdx+1] = 'Cabinet';//					$ir['ttl'][9] = 'Base Cabinet'; 					$ir['tag'][2] = 'base-cabinet'; 					}				}			if(array_search('Cabinet', $ir['ttl'])){ array_push($ir['cat'], 'Cabinets'); }			if(isset($ir['ttl'][1])){ $ir['cat'][1] = $ir['ttl'][0].' '.$ir['ttl'][1]; }			ksort($ir['ttl']);			ksort($ir['cat']);			ksort($ir['tag']);			$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/','',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$sku = preg_replace("/$r[1]/","-$r[1]",$r[0]);			$sku = preg_replace("/[-]{2,3}/","-",$sku);									$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			array_push($bar, array('sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[2],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));			}		//$ttl = 	$vn .' '.$stl.' '.$t1.' '.$t2.' '.$t3;		break;//		break;//		case 'uscd222':  //////////////////////////////////////////// USCD		case 'uscd':  //////////////////////////////////////////// USCD		// $ir['ttl'][0] = 'US Cabinet Depot';  		// $ir['cat'][0] = 'Cabinets';		// $ir['tag'][0] = 'us-cabinet-depot';  		$ir = NULL; // hgnric($r, $vnd);//		if(isset($ir['sku'])){ array_push($bar, $ir); }//		else{				$ir['ttl'] = array('US Cabinet Depot');  			$ir['cat'] = array(); //'Cabinets';			$ir['tag'] = array('us-cabinet-depot');  //echo $r[1]. '<br>';if(preg_match('/^V/', $r[0]) OR preg_match('/^\dV/', $r[0]))	{ array_push($ir['cat'], 'Vanities'); }else															{ array_push($ir['cat'], 'Cabinets'); }	pickcatUSCD($r[1]);/*	if($r[0]=='CM8'){ array_push($ir['ttl'], 'Classic Crown Molding'); array_push($ir['tag'], 'accessories','molding'); }	if($r[0]=='COV'){ array_push($ir['ttl'], 'Crown Molding - Cove Molding'); array_push($ir['tag'], 'accessories','molding'); }	if($r[0]=='LACM8'){ array_push($ir['ttl'], 'Crown Molding - 3H Angled Crown Molding'); array_push($ir['tag'], 'accessories','molding'); }	if($r[0]=='ACM8'){ array_push($ir['ttl'], 'Crown Molding - 1 3/4H Angled Crown Molding'); array_push($ir['tag'], 'accessories','molding'); }	if(preg_match('/^(VDDB)(\d.*)/', $r[0], $m)){ array_push($ir['ttl'], 'Vanity Combo Bases - Double Drawer Stack', "$m[2]W",'X 21D X 34-1/2H'); array_push($ir['tag'], 'vanity', 'drawer'); }	if(preg_match('/^(VSD)(\d.*)/', $r[0], $m)){ array_push($ir['ttl'], 'Vanity Combo Bases', "$m[2]W",'X 21D X 34-1/2H'); array_push($ir['tag'], 'vanity', 'drawer'); }	if(preg_match('/^(V)([\d]{2})(21DR)/', $r[0], $m)){ array_push($ir['ttl'], 'Vanity Combo Bases - Drawers Right', "$m[2]W",'X 21D X 34-1/2H'); array_push($ir['tag'], 'vanity', 'drawer'); }	if(preg_match('/^(V)([\d]{2})(21DL)/', $r[0], $m)){ array_push($ir['ttl'], 'Vanity Combo Bases - Drawers Left', "$m[2]W",'X 21D X 34-1/2H'); array_push($ir['tag'], 'vanity', 'drawer'); }	if(preg_match('/^(VS)([\d]{2})/', $r[0], $m)){ array_push($ir['ttl'], 'Vanity Sink Base - Double Door Double Drawer Front', "$m[2]W",'X 21D X 34-1/2H'); array_push($ir['tag'], 'vanity', 'drawer'); }//	if(preg_match('/^(3VDB)([\d]{2})/', $r[0], $m)){ array_push($ir['ttl'], 'Vanity Drawer Base', "$m[2]W",'X 21D X 34-1/2H'); array_push($ir['tag'], 'vanity', 'drawer'); }	if(preg_match('/^(U)([\d]{2})([\d]{2})([\d]{2})(4RS)/', $r[0], $m)){ 		array_push($ir['ttl'], 'Accessory Tall Cabinet - Four Door Utility Four Rollout Shelf Cabinet Kit', "$m[2]W X $m[4]D X $m[3]H"); 		array_push($ir['tag'], 'tall-cabinets', 'roll-out-tray'); }	if(preg_match('/^(U)([\d]{2})([\d]{2})([\d]{2})/', $r[0], $m)){ 		array_push($ir['ttl'], 'Utility Cabinet - Four Doors', "$m[2]W X $m[4]D X $m[3]H"); 		array_push($ir['tag'], 'tall-cabinets'); }	if(preg_match('/^(O33)([\d]{2})(24)/', $r[0], $m)){ 		array_push($ir['ttl'], 'Oven Cabinet', "33W X 24D X $m[2]H"); 		array_push($ir['tag'], 'tall-cabinets', 'oven-cabinet'); }	if(preg_match('/WWC630/', $r[0], $m)){ array_push($ir['ttl'], 'Wall Accessory Cabinet - Wine Cubby', '30W X 12D X 6H'); array_push($ir['tag'], 'accessories', 'wine-rack-cabinet'); }	if(preg_match('/^(WRC)([\d]{2})([\d]{2})/', $r[0], $m)){ 		array_push($ir['ttl'], 'Wall Accessory Cabinet - Wine Rack', "$m[2]W X 12D X $m[3]H"); 		array_push($ir['tag'], 'accessories', 'wine-rack-cabinet'); }	if(preg_match('/WXRSHELF/', $r[0], $m)){ array_push($ir['ttl'], 'Wall Accessory Cabinet - Wall Open Cabinet - X Rack Insert', '30W X 12D X 18H'); array_push($ir['tag'], 'accessories', 'open'); }	if(preg_match('/WMSSHELF/', $r[0], $m)){ array_push($ir['ttl'], 'Wall Accessory Cabinet - Wall Open Cabinet Microwave Shelf Insert', '30W X 12D X 18H'); array_push($ir['tag'], 'accessories', 'open', 'microwave'); }	if(preg_match('/WOC3018/', $r[0], $m)){ array_push($ir['ttl'], 'Wall Accessory Cabinet - Wall Open Cabinet', '30W X 12D X 18H'); array_push($ir['tag'], 'accessories', 'open'); }	if(preg_match('/^(W3D)([\d]{2})/', $r[0], $m)){ 		array_push($ir['ttl'], 'Wall Accessory Cabinet - Three Drawer Tower Stacking Cabinet', "$m[2]W X 12D X 18H"); 		array_push($ir['tag'], 'accessories', 'drawer'); }	if(preg_match('/DCW2412GD/', $r[0], $m)){ array_push($ir['ttl'], 'Glass Door Diagonal Wall Stacker Cabinets 12H'); array_push($ir['tag'], 'diagonals'); }	if(preg_match('/^(W)([\d]{2})([\d]{2})(GD)/', $r[0], $m)){ $drs = ($m[2]>=24)?'Double':'Single';		array_push($ir['ttl'], "Glass Door Wall Cabinet - $drs Door", "$m[2]W X 12D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet'); }//	if(preg_match('/(W)([\d]{2})([\d]{2})(GD)/', $r[0], $m)){ $drs = ($m[2]>=24)?'Double':'Single';//	array_push($ir['ttl'], "Glass Door Wall Cabinets - $drs Door", "$m[2]W X 12D X $m[3]H"); array_push($ir['tag'], 'wall-cabinet'); }	if(preg_match('/^(WBC)([\d]{2})([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Wall Blind Cabinet", "$m[2]W X 12D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet'); }	if(preg_match('/^(DCW)([\d]{2})([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Diagonal Corner Wall Cabinet", "$m[2]W X 12D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet','diagonals'); }	if(preg_match('/^(DCW)([\d]{2})([\d]{2})(GD)$/', $r[0], $m)){		array_push($ir['ttl'], "Glass Door Diagonal Wall Cabinet", "$m[2]W X 12D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet','diagonals'); }	if(preg_match('/^(WER)([\d]{2})([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Wall Easy Reach", "$m[2]W X 12D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet'); }	if(preg_match('/^(RS)([\d]{2})(-Type A)/', $r[0], $m)){ array_push($ir['ttl'], 'Roll Out Shelf', "$m[2]W",'X 20-3/8D X 3-1/4H'); array_push($ir['tag'],'accessories','roll-out-tray'); }	if(preg_match('/TUK/', $r[0], $m)){ array_push($ir['ttl'], 'Touch-up Kit'); array_push($ir['tag'],'accessories','accessories-other'); }	if(preg_match('/^(EB)([\d]{2})/', $r[0], $m)){ array_push($ir['ttl'], "$m[2]ft",'Edge Banding Roll'); array_push($ir['tag'],'accessories','accessories-other'); }	if(preg_match('/^(TEP)([\d]{2})([\d]{2})$/', $r[0], $m)){ array_push($ir['ttl'], 'Tall End Panel', "$m[2]W","X $m[3]H"); array_push($ir['tag'],'accessories', 'panel-and-filler'); }	if(preg_match('/^(BEP)([\d]{2})([\d]{2})$/', $r[0], $m)){ array_push($ir['ttl'], 'Base End Panel', "$m[2]W","X $m[3]H"); array_push($ir['tag'],'accessories', 'panel-and-filler'); }	if(preg_match('/^(TAM)([\d]{2})/', $r[0], $m)){ array_push($ir['ttl'], 'Toe Kick Apron Molding', "$m[2]W",'X 3/4D X 4-1/2H'); array_push($ir['tag'],'accessories', 'molding'); }	if(preg_match('/^(TAA)([\d]{2})/', $r[0], $m)){ array_push($ir['ttl'], 'Toe Kick Arched Apron Molding', "$m[2]W",'X 3/4D X 4-1/2H'); array_push($ir['tag'],'accessories', 'molding'); }	if(preg_match('/^(DFB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Drawer File Base", "$m[2]W X 21D X 29-1/2H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(B)([\d]{2})(FH2RS)$/', $r[0], $m)){		array_push($ir['ttl'], "Single Full Height Door Two Rollout Shelf Base Kit", "$m[2]W X 24D X 34-1/2H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(B)([\d]{2})(2RS)$/', $r[0], $m)){		array_push($ir['ttl'], "Single Door Single Drawer Two Rollout Shelf Base Kit", "$m[2]W X 24D X 34-1/2H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(B)([\d]{2})(1RS)$/', $r[0], $m)){		array_push($ir['ttl'], "Single Door Single Drawer One Rollout Shelf Base Kit", "$m[2]W X 24D X 34-1/2H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(B)([\d]{2})(FH3RS)$/', $r[0], $m)){		array_push($ir['ttl'], "Double Full Height Door Three Rollout Shelf Base Kit", "$m[2]W X 24D X 34-1/2H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(B)([\d]{2})(FH1RS)$/', $r[0], $m)){		array_push($ir['ttl'], "Single Full Height Door Three Rollout Shelf Base Kit", "$m[2]W X 24D X 34-1/2H"); 		array_push($ir['tag'], 'base-cabinet'); }	// if($r[0]==''){ array_push($ir['ttl'], ''); array_push($ir['tag'], 'accessories','molding'); }	// if($r[0]==''){ array_push($ir['ttl'], ''); array_push($ir['tag'], 'accessories','molding'); }	// if($r[0]==''){ array_push($ir['ttl'], ''); array_push($ir['tag'], 'accessories','molding'); }	// if($r[0]==''){ array_push($ir['ttl'], ''); array_push($ir['tag'], 'accessories','molding'); }///////////////    Frameless	if(preg_match('/^(SB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Two Door with False Front Sink Base", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'sink-base'); }	if(preg_match('/^(SB)([\d]{2})(S)$/', $r[0], $m)){		array_push($ir['ttl'], "One Door with False Front Sink Base", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'sink-base'); }		if($m=mtc('(SB)([\d]{2})(SFH)')) { $ir=bldttg(array('Full Height One Door Sink Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'sink-base')); }if($m=mtc('(SB)([\d]{2})(FH)'))  { $ir=bldttg(array('Full Height Two Door Sink Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'sink-base')); }if($m=mtc('(4DB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Four Drawer Base (BLUM)', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(4DB)([\d]{2})')) { $ir=bldttg(array('Four Drawer Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(3DB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Three Drawer Base (BLUM)', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(3DB)([\d]{2})')) { $ir=bldttg(array('Three Drawer Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(2DB2ID)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Two Drawer Base with Two Inner Drawers (BLUM)', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(2DB2ID)([\d]{2})')) { $ir=bldttg(array('Two Drawer Base with Two Inner Drawers', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(2DBID)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Two Drawer Base with One Inner Drawer (BLUM)', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(2DBID)([\d]{2})')) { $ir=bldttg(array('Two Drawer Base with One Inner Drawer', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(2DB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Two Drawer Base (BLUM)', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(2DB)([\d]{2})')) { $ir=bldttg(array('Two Drawer Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(B)([\d]{2})([S]{0,1})(-BLUM)')) { $ir=bldttg(array('One Door One Drawer Base (BLUM)', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(B)([\d]{2})([S]{0,1})')) { $ir=bldttg(array('One Door One Drawer Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet', 'drawer-base')); }if($m=mtc('(B)([\d]{2})([S]{0,1})(FH)')) { $ir=bldttg(array('Full Height Single Door Base', "$m[2]W",'X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(BT)([\d]{1})(FH)')) { $ir=bldttg(array('Full Height One Door Base', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet')); }if($m=mtc('(BPO)([\d]{1,2})(FH)([LR]{1})')) { $ir=bldttg(array('Base Rollout with Tray Pullout', "$m[2]W",'X 24D X 34-3/4H'), array('base-cabinet')); }if($m=mtc('(BPO6FH)')) { $ir=bldttg(array('Base Rollout with Basket Pullout', '6 X 24D X 34-3/4H'), array('base-cabinet')); }if($m=mtc('(B)([\d]{2})(FHTD)')) { $ir=bldttg(array('Full Height Tray Divider Base Kit', "$m[2]W",'X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(B)([\d]{2})(TD)')) { $ir=bldttg(array('Tray Divider Base Kit', "$m[2]W",'X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(B)([\d]{2})(FHTCPO)')) { $ir=bldttg(array('Full Height Door Base Kit with Single Trashcan', "$m[2]W",'X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(B)([\d]{2})(TCPO)')) { $ir=bldttg(array('Single Door Single Drawer Base Kit with Single Trashcan Pullout', "$m[2]W",'X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(BT9PO)')) { $ir=bldttg(array('Full Height Door Base Kit with Shelf Pullout', '15W X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(BBC42)')) { $ir=bldttg(array('Blind Base', '39W X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(BBC36)')) { $ir=bldttg(array('Blind Base', '27W X 24D X 34-1/2H'), array('base-cabinet')); }if($m=mtc('(SBF)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Diagonal Sink Floor', "$m[2]W",'X', "$m[3]D", 'X 1/2H'), array('accessories')); }if($m=mtc('(DCSF36)')) { $ir=bldttg(array('Diagonal Sink Front', '17-13/16X 3/4D X 30H'), array('accessories','sink-base')); }if($m=mtc('(TAS)([\d]{2})')) { $ir=bldttg(array('Toe Kick Apron Support', "$m[2]W",'X', '3-1/8D X 3/2H'), array('accessories','molding')); }if($m=mtc('(WDEP)([\d]{2})')) { $m[2]-=1; $ir=bldttg(array('Wall Decorative End Panel', '11-1/2W X 3/4D X',"$m[2]H" ), array('accessories','panel-and-filler')); }if($m=mtc('(WDEP)([\d]{2})([\d]{2})')) { $m[3]-=1; $ir=bldttg(array('Wall Decorative End Panel', '11-1/2W X 3/4D X',"$m[3]H" ), array('accessories','panel-and-filler')); }if($m=mtc('(FS)([\d]{2})')) { $ir=bldttg(array('Floating Shelf', "$m[2]W",'X 11D X 1-1/2H'), array('accessories','accessories-other')); }if($m=mtc('(WFD)([\d]{2})([\d]{2})')) { $ir=bldttg(array('13.5 inch Deep Flip Up Wall Cabinet', "$m[2]W",'X 13-1/2D X', "$m[3]H"), array('wall-cabinet')); }if($m=mtc('(WFD)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('13.5 inch Deep Flip Up Wall Cabinet (BLUM)', "$m[2]W",'X 13-1/2D X', "$m[3]H"), array('wall-cabinet')); }if($m=mtc('(WFD)([\d]{2})([\d]{2})(24)')) { $ir=bldttg(array('24 inch Deep Flip Up Wall Cabinet', "$m[2]W",'X 24D X', "$m[3]H"), array('wall-cabinet')); }if($m=mtc('(WFD)([\d]{2})([\d]{2})(24-BLUM)')) { $ir=bldttg(array('24 inch Deep Flip Up Wall Cabinet (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('wall-cabinet')); }if($m=mtc('(WBC)([\d]{2})(\/)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Wall Blind Corner Cabinet', "$m[2]W",'X 13-1/2D X', "$m[5]H"), array('wall-cabinet')); }if($m=mtc('(T)([\d]{2})([\d]{2})([S]{0,1})')) { $ir=bldttg(array('Tall Four Door Open Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(TB)([\d]{2})([\d]{2})([S]{0,1})(FH)')) { $ir=bldttg(array('Tall Four Door Utility with Shelves', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(TB)([\d]{2})([\d]{2})([S]{0,1})')) { $ir=bldttg(array('Tall Four Door One Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(TB)([\d]{2})([\d]{2})([S]{0,1})(-BLUM)')) { $ir=bldttg(array('Tall Four Door One Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T2DB)([\d]{2})([\d]{2})([S]{0,1})')) { $ir=bldttg(array('Tall Two Door Two Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T2DB)([\d]{2})([\d]{2})([S]{0,1})(-BLUM)')) { $ir=bldttg(array('Tall Two Door Two Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T2DBID)([\d]{2})([\d]{2})([S]{0,1})')) { $ir=bldttg(array('Tall Two Door Two Drawer with One Inner Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T2DBID)([\d]{2})([\d]{2})([S]{0,1})(-BLUM)')) { $ir=bldttg(array('Tall Two Door Two Drawer with One Inner Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T3DB)([\d]{2})([\d]{2})([S]{0,1})')) { $ir=bldttg(array('Tall Two Door Three Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T3DB)([\d]{2})([\d]{2})([S]{0,1})(-BLUM)')) { $ir=bldttg(array('Tall Two Door Three Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T4DB)([\d]{2})([\d]{2})([S]{0,1})')) { $ir=bldttg(array('Tall Two Door Four Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(T4DB)([\d]{2})([\d]{2})([S]{0,1})(-BLUM)')) { $ir=bldttg(array('Tall Two Door Four Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets')); }if($m=mtc('(TOS)([\d]{2})([\d]{2})(FH)')) { $ir=bldttg(array('Tall Single Oven Full Height Two Door Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOSB)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Tall Single Oven Two Door One Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOSB)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('Tall Single Oven Two Door One Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS2DB)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Tall Single Oven Two Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS2DB)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('Tall Single Oven Two Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS2DBID)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Tall Single Oven Two Drawer with One Inner Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS2DBID)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('Tall Single Oven Two Drawer with One Inner Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS3DB)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Tall Single Oven Three Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS3DB)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('Tall Single Oven Three Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS4DB)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Tall Single Oven Four Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOS4DB)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('Tall Single Oven Four Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOD)([\d]{2})([\d]{2})')) { $ir=bldttg(array('Tall Double Oven One Drawer Utility', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(TOD)([\d]{2})([\d]{2})(-BLUM)')) { $ir=bldttg(array('Tall Double Oven One Drawer Utility (BLUM)', "$m[2]W",'X 24D X', "$m[3]H"), array('tall-cabinets','oven-cabinet')); }if($m=mtc('(VB)([\d]{2})(FH)')) { $ir=bldttg(array('Full Height One Door Vanity Base', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(VB)([\d]{2})')) { $ir=bldttg(array('Full Height One Door Vanity Base', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(VB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Full Height One Door Vanity Base (BLUM)', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(2VDB)([\d]{2})')) { $ir=bldttg(array('Two Drawer Vanity Base', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(2VDB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Two Drawer Vanity Base (BLUM)', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(2VDBID)([\d]{2})')) { $ir=bldttg(array('Two Drawer with One Inner Drawer Vanity Base', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(2VDBID)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Two Drawer with One Inner Drawer Vanity Base (BLUM)', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(3VDB)([\d]{2})')) { $ir=bldttg(array('Three Drawer Vanity Base', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(3VDB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Three Drawer Vanity Base (BLUM)', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(4VDB)([\d]{2})')) { $ir=bldttg(array('Four Drawer Vanity Base', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(4VDB)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Four Drawer Vanity Base (BLUM)', "$m[2]W",'X 21D X 34-3/4H'), array('drawer-base-vanity')); }if($m=mtc('(VSB)([\d]{2})(SFH)')) { $ir=bldttg(array('Full Height One Door Vanity Sink Base', "$m[2]W",'X 21D X 34-3/4H'), array('vanity','sink-base')); }if($m=mtc('(VSB)([\d]{2})(FH)')) { $ir=bldttg(array('Full Height Double Door Vanity Sink Base', "$m[2]W",'X 21D X 34-3/4H'), array('vanity','sink-base')); }if($m=mtc('(VSB)([\d]{2})')) { $ir=bldttg(array('Vanity Sink Base False Front Two Door', "$m[2]W",'X 21D X 34-3/4H'), array('vanity','sink-base')); }if($m=mtc('(VKD)([\d]{2})')) { $ir=bldttg(array('Vanity Knee Drawer', "$m[2]W",'X 21D X 7.5H'), array('drawer')); }if($m=mtc('(VKD)([\d]{2})(-BLUM)')) { $ir=bldttg(array('Vanity Knee Drawer (BLUM)', "$m[2]W",'X 21D X 7.5H'), array('drawer')); }*/if($m=mtc('(MCVE8)')) { $ir=bldttg(array('2-1/2 inch Cove Crown Molding'), array('accessories','molding')); }if($m=mtc('(LCVE8)')) { $ir=bldttg(array('3-3/8 inch Cove Crown Molding'), array('accessories','molding')); }if($m=mtc('(MPF1)')) { $ir=bldttg(array('1-1/2 inch Light Rail Molding'), array('accessories','molding')); }if($m=mtc('(MPF6)')) { $ir=bldttg(array('6 inch Crown Extension Molding'), array('accessories','molding')); }if($m=mtc('(SPM2)')) { $ir=bldttg(array('Support Molding'), array('accessories','molding')); }if($m=mtc('(OCM8)')) { $ir=bldttg(array('Outside Corner Molding'), array('accessories','molding')); }if($m=mtc('(BM8)')) { $ir=bldttg(array('Batten Molding'), array('accessories','molding')); }if($m=mtc('(SM8)')) { $ir=bldttg(array('Scribe Molding'), array('accessories','molding')); }if($m=mtc('(SHM8)')) { $ir=bldttg(array('Shoe Molding'), array('accessories','molding')); }if($m=mtc('(TKC)')) { $ir=bldttg(array('Toe Kick Cover'), array('accessories','toe-kick')); }if($m=mtc('(TKC-PVC)')) { $ir=bldttg(array('Brushed Aluminum PVC Toe Kick Cover'), array('accessories','toe-kick')); }if($m=mtc('(CORNER-PVC)')) { $ir=bldttg(array('PVC Toe Kick Corner Connector'), array('accessories','toe-kick')); }if($m=mtc('(FBM8)')) { $ir=bldttg(array('Furniture Base Molding'), array('accessories','molding')); }if($m=mtc('(AF3006)')) { $ir=bldttg(array('Appliance Filler (Three Pack)'), array('accessories','panel-and-filler')); }if($m=mtc('(OF3)([\d]{2})')) { $ir=bldttg(array('3 inch Filler Overlay', '3W X',"$m[2]H"), array('accessories','panel-and-filler')); }if($m=mtc('(OF6)([\d]{2})')) { $ir=bldttg(array('6 inch Filler Overlay', '6W X',"$m[2]H"), array('accessories','panel-and-filler')); }if($m=mtc('(BP9642)')) { $ir=bldttg(array('Long End Panel 96W X 3/4D X 42H'), array('accessories','panel-and-filler')); }if($m=mtc('(WEP15)([\d]{2})')) { $ir=bldttg(array('Wall End Panel', '15W X 3/4D X',"$m[2]H"), array('accessories','panel-and-filler')); }if($m=mtc('(FS)([\d]{2})')) { $ir=bldttg(array('Floating Shelf', "$m[2]W",'X 13D X 1-15/16H'), array('accessories','end-shelf')); }if($m=mtc('(CB9)')) { $ir=bldttg(array('Corbel – 3W X 9H X 9D'), array('accessories')); }////////////////////               JoFV ////////////////////////////////////////////// waverlycabinets.com/qbw/cmpUVW.php?dm=1&sel=1&br=us-cabinet-depot// if($m=mtc('')) { $ir=bldttg(array(), array()); }//$ir = bldatasku($r[0], '(SB)([\d]{2})(FH)', 'Full Height Two Door Sink Base', 'base-cabinet', 1, 2, 3);		/*					if(preg_match('/^(FSB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Farm Sink Base", "$m[2]W",'X 21D X 34-1/2H'); 		array_push($ir['tag'], 'base-cabinet', 'sink-base'); }	if(preg_match('/^(LSB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Base Easy Reach with Lazy Susan Tray", "$m[2]W", 'X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(BER)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Base Easy Reach", "$m[2]W", 'X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(BBC)([\d]{2})(\/)([\d]{2})([S]{0,1})(FH)$/', $r[0], $m)){		array_push($ir['ttl'], "Full Height One Door Blind Base", $m[4]-10 . 'W X', $m[4]-10-18 . 'L', 'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(W)([\d]{2})([\d]{2})([\d]{2})/', $r[0], $m)){		array_push($ir['ttl'], "One Door Stacker Wall Cabinet", "$m[2]W X $m[4]D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet'); }	if(preg_match('/^(W)([\d]{2})([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Two Door Stacker Wall Cabinet", "$m[2]W X 13D X $m[3]H"); 		array_push($ir['tag'], 'wall-cabinet'); }	if(preg_match('/^(DDR3DB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Three Drawer Desk Base", "$m[2]W",'X 24D X 23H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(DDR2DB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Two Drawer Desk Base", "$m[2]W",'X 24D X 23H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(DDO)([\d]{2})([S]{0,1})$/', $r[0], $m)){		array_push($ir['ttl'], "Full Height One Door Desk Base", "$m[2]W",'X 24D X 23H'); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(BMW)([\d]{2})(-BLUM)$/', $r[0], $m)){		array_push($ir['ttl'], "Base Microwave Cabinet (BLUM)", "$m[2]W X 24D X 34-3/4H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(BMW)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Base Microwave Cabinet", "$m[2]W X 24D X 34-3/4H"); 		array_push($ir['tag'], 'base-cabinet'); }	if(preg_match('/^(RB4DB)([\d]{2})(-BLUM)$/', $r[0], $m)){		array_push($ir['ttl'], "Three Drawer with False Front Range Base (BLUM)", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(RB4DB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Three Drawer with False Front Range Base", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(RB3DB)([\d]{2})(-BLUM)$/', $r[0], $m)){		array_push($ir['ttl'], "Two Drawer with False Front Range Base (BLUM)", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(RB3DB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Two Drawer with False Front Range Base", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(RB2DB)([\d]{2})(-BLUM)$/', $r[0], $m)){		array_push($ir['ttl'], "Two Drawer Range Base (BLUM)", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }	if(preg_match('/^(RB2DB)([\d]{2})$/', $r[0], $m)){		array_push($ir['ttl'], "Two Drawer Range Base", "$m[2]W",'X 24D X 34-3/4H'); 		array_push($ir['tag'], 'base-cabinet', 'drawer-base'); }*//*			$ir['tag'][1] = (isset($ir['ttl'][1]))?preg_replace('/[\s]{1,3}/','-',strtolower($ir['ttl'][1])):NULL;			$sk = preg_replace("/^G/",'',$r[0]);			$sk = preg_replace("/$pr$/",'',$sk);			if(preg_match('/([\D]{1,6})([\d]{1,6})(.*)/',$sk,$m)){				if(strlen($m[1])==1){					if($m[1]=='B'){ 						array_push($ir['ttl'], 'Base Cabinet');						array_push($ir['tag'], 'base-cabinet'); 						}					if($m[1]=='W'){ 						array_push($ir['ttl'], 'Wall Cabinet');						array_push($ir['tag'], 'wall-cabinet'); 						}					}				if(strlen($m[1])==2){					if(preg_match('/CM/',$m[1])){ 						array_push($ir['ttl'], 'Crown Molding'); 						array_push($ir['tag'], 'accessories'); 						array_push($ir['tag'], 'molding'); 						}					}				if(strlen($m[1])==3){					if($m[1]=='FSB'){ 						array_push($ir['ttl'], 'Farm Sink Base');						array_push($ir['tag'], 'farm-sink-base'); 						}					if(preg_match('/OCM/',$m[1])){ 						array_push($ir['ttl'], 'Outside Corner Molding'); 						array_push($ir['tag'], 'accessories'); 						array_push($ir['tag'], 'molding'); 						}					if(preg_match('/ICM/',$m[1])){ 						array_push($ir['ttl'], 'Inside Corner Molding'); 						array_push($ir['tag'], 'accessories'); 						array_push($ir['tag'], 'molding'); 						}					}				if(preg_match('/GD/',$m[3])){ 					array_push($ir['ttl'], 'Glass Door');					}				if(preg_match('/M/',$m[1])){ 					array_push($ir['ttl'], 'Microwave'); 					array_push($ir['tag'], 'base-cabinet-other'); 					array_push($ir['tag'], 'microwave'); 					}				if(preg_match('/LACM/',$m[1])){ 					array_push($ir['ttl'], 'Large Angle Crown Molding'); 					array_push($ir['tag'], 'accessories'); 					array_push($ir['tag'], 'molding'); 					}				}						if(isset($ir['ttl'][10])){				switch($ir['ttl'][10]){					case 'Cabinet': $ir['cat'][0] = 'Cabinets'; break;					default: break;					}				}			if(array_search('Cabinet', $ir['ttl'])){ array_push($ir['cat'], 'Cabinets'); }//			if(isset($ir['ttl'][1])){ $ir['cat'][1] = $ir['ttl'][0].' '.$ir['ttl'][1]; }//			if(isset($ir['ttl'][1])){ $ir['cat'][1] = $ir['ttl'][1]; }//			$ir['cat'][1] = $ir['ttl'][0].' '.$ir['ttl'][1];			$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;////// */			$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;			$sku = (strlen($r[1])==2)?'U-'.$r[1].'-'.$r[0]:$r[1].'-'.$r[0];			$sku = preg_replace("/[-]{2,3}/","-",$sku);			ksort($ir['ttl']);			ksort($ir['cat']);			ksort($ir['tag']);			$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));						$wcsku= preg_replace("/$pr$/","-$pr",$r[0]);					array_push($bar, array('sku_body'=>$r[0], 'sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[3],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));//			}				break;		case 'wlf':  /////////////////////////////////  Wolf		$ir = hgnric($r, $vnd);		if(isset($ir['sku'])){ array_push($bar, $ir); }		else{			$catr = NULL;			switch($r[3]){				case '003':		$catr = 'Dartmouth Honey';		break;				case '005':		$catr = 'Dartmouth White';		break;				case '011':		$catr = 'Dartmouth Chestnut';	break;				case '012':		$catr = 'Circa Dark Sable';		break;				case '014':		$catr = 'Dartmouth Dark Sable';	break;				case '016':		$catr = 'Circa Honey';			break;				case '017':		$catr = 'Circa Crimson';		break;				case '018':		$catr = 'Circa Chestnut';		break;				case '020':		$catr = 'York White';			break;				case '021':		$catr = 'York Grey';			break;				case '022':		$catr = 'Dartmouth Pewter';		break;				case '023':		$catr = 'Dartmouth Grey';		break;				case '024':		$catr = 'Dartmouth Brownstone';	break;				case '038':		$catr = 'Hanover White';		break;				case '039':		$catr = 'Hanover Grey';			break;				case '040':		$catr = 'Berwyn Opal';			break;				case '044':		$catr = 'Grantley White';		break;				case '5005':	$catr = '5Pc Dartmouth White';	break;				case '5022':	$catr = '5Pc Dartmouth Pewter';	break;				case '5023':	$catr = '5Pc Dartmouth Grey';	break;				default: break;				}			$tagr = NULL;			switch($r[5]){				case 'Marketing Samples':	$tagr = 'samples';							break;				case 'Cabinet-Base':		$tagr = 'base-cabinet';						break;				case 'Cabinet-Base FH':		$tagr = 'full-height-base-cabinet';			break;				case 'Cabinet-Tall':		$tagr = 'tall-cabinets';					break;				case 'Cabinet-Wall':		$tagr = 'wall-cabinet';						break;				case 'Cabinet-Vanity':		$tagr = 'vanity';							break;				case 'Cabinet-Vanity Tall':	$tagr = 'tall-cabinets,vanity-tall';		break;				case 'Cabinet-Base-ADA':	$tagr = 'base-cabinet,base-ada';			break;				case 'Cabinet-Tall-ADA':	$tagr = 'tall-cabinets,tall-ada';			break;				case 'Cabinet-Vanity-ADA':	$tagr = 'vanity,vanity-ada';				break;				case 'Cabinet-Base-UD':		$tagr = 'base-cabinet,base-ud';				break;				case 'Cabinet-Tall-UD':		$tagr = 'tall-cabinets,tall-ud';			break;				case 'Cabinet-Vanity-UD':	$tagr = 'vanity,vanity-ud';					break;				case 'Acc-Barbracket':		$tagr = 'accessories,accessories-other';	break;				case 'Acc-Corbel':			$tagr = 'accessories,corbels';				break;				case 'Acc-Deco End Panel':	$tagr = 'accessories,panel-and-filler';		break;				case 'Acc-Filler':			$tagr = 'accessories,panel-and-filler';		break;				case 'Acc-Foot':			$tagr = 'accessories,legs';					break;				case 'Acc-Leg':				$tagr = 'accessories,legs';					break;				case 'Acc-Hood':			$tagr = 'accessories,range-hood';			break;				case 'Acc-Moulding':		$tagr = 'accessories,molding';				break;				case 'Acc-Panel':			$tagr = 'accessories,panel-and-filler';		break;				case 'Acc-Valance':			$tagr = 'accessories,valance';				break;				case 'Acc-Wall Organizer':	$tagr = 'accessories,accessories-other';	break;				case 'Acc-Miscellaneous':	$tagr = 'accessories,accessories-other';	break;				case 'Acc-Storage Solution':$tagr = 'accessories,accessories-other';	break;				case 'Parts/Hardware':		$tagr = 'accessories,accessories-other';	break;				case 'Finish Supply':		$tagr = 'accessories,accessories-other';	break;				default: break;				}						$ir['ttl'] = (preg_match("/$catr/", $r[4]))?array('Wolf', $r[4], $r[5], "($r[2])"):array('Wolf', $catr, $r[4], $r[5], "($r[2])");  			$ir['cat'] = array('Cabinets', "Wolf $catr");			$ir['tag'] = array('wolf',preg_replace('/[\s]{1,3}/','-',strtolower($catr)),$tagr);  //			if(isset($ir['ttl'][1])){ $ir['tag'][1] = preg_replace('/[\s]{1,3}/','-',strtolower($ir['ttl'][1])); }			//			if(isset($ir['ttl'][1])){ $ir['cat'][1] = $ir['ttl'][0].' '.$ir['ttl'][1]; }			ksort($ir['ttl']);			ksort($ir['cat']);			ksort($ir['tag']);			$ttl = join(' ', $ir['ttl']);			$cat = join(',', $ir['cat']);			$tag = join(',', $ir['tag']);						$ttl = preg_replace('/[\s]{1,7}$/','',$ttl);			$slg = preg_replace('/[\s]{1,3}/','-',strtolower($ttl));			//			$sku = $r[5]; //preg_replace("/$r[1]/","-$r[1]",$r[0]);//			$sku = preg_replace("/[-]{2,3}/","-",$sku);									$img = (preg_match('/MB30/',$r[0]))?'https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg':NULL;//			array_push($bar, array('sku'=>$sku,'prf'=>$r[1],'rpr'=>$r[2],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));			array_push($bar, array('sku_body'=>$r[2], 'sku'=>$r[6],'prf'=>$r[3],'rpr'=>$r[7],'ttl'=>$ttl,'slg'=>$slg,'cat'=>$cat,'tag'=>$tag,'img'=>$img));			}		//$ttl = 	$vn .' '.$stl.' '.$t1.' '.$t2.' '.$t3;		break;						default: break;		}//echo $m[1] . ' - ' . $m[2] . '<br>';//$imgseo = 'ghi';				// $itfr .=  '// <tr><td>'.++$pi.'.</td>	// <td>'.$r[0].'</td>	// <td>'.$r[1].'</td>	// <td>'.$r[2].'</td>	// <td>'.$ttl.'</td>	// <td>'.$slg.'</td>	// <td>'.$cat.'</td>	// <td>'.$tag.'</td>	// <td><a target="_blank" href="'.$r[7].'"><img src="'.$r[7].'" style="width: 30px;" /></a></td>	// <td>'.$imgseo.'</td>	// <td>'.$imgseo.'.jpg'.'</td>// </tr>';}foreach($bar as $mk=>$mr){//if($mr['img']){		$itfr .=  ' <input type="hidden" name="sku_body['.$pi.']" value="'.$mr['sku_body'].'" /><tr><td>'.++$pi.'.</td>	<td><input type="checkbox" name="fs_chk_'.($pi-1).'" value="1" style="margin: 0px;" checked /></td>	<td><input type="text" name="fs_sku[]" value="'.$mr['sku'].'" style="width: 170px;" /></td>	<td><input type="text" name="fs_prf[]" value="'.$mr['prf'].'" style="width: 50px;" /></td>	<td><input type="text" name="fs_rpr[]" value="'.$mr['rpr'].'" style="width: 50px;" /></td>	<td><input type="checkbox" name="tbtn_'.$pi.'" value="1" OnChange="shh_tfld(this);" />		<div style="position: absolute; width: 900px; height: 380px; padding: 7px; background: #ccc; margin-left: 20px; border: solid 1px #999; border-radius: 7px; display: none; z-index: 45'.$pi.';" id="tfld_'.$pi.'">		<textarea style="width: 100%; height: 100px; padding: 3px;" name="fs_dsc[]" placeholder="Description"></textarea><br><br>		<textarea style="width: 100%; height: 50px; padding: 3px;" name="fs_sdsc[]" placeholder="Short description"></textarea><br><br><div style="float: right;">Image name:	<input type="text" style="width: 350px; margin-bottom: 10px; padding: 3px;" name="fs_imgnm[]" value="'.$mr['slg'].'" placeholder="Image Name" />		<!-- input type="text" style="width: 500px; margin-bottom: 10px; padding: 3px;" name="fs_imgttl[]" placeholder="Image Title" />		<input type="text" style="width: 500px; margin-bottom: 10px; padding: 3px;" name="fs_imgcpt[]" placeholder="Image Caption" />		<input type="text" style="width: 500px; margin-bottom: 10px; padding: 3px;" name="fs_altxt[]" placeholder="Image Alt text" />		<textarea style="width: 500px; height: 70px; border: none; padding: 3px;" name="fs_imgdsc[]" placeholder="Image Description"></textarea --></div>				</div></td>	<td><input type="text" name="fs_ttl[]" value="'.$mr['ttl'].'" style="width: 300px;" /></td>			<td><input type="text" name="fs_cat[]" value="'.$mr['cat'].'" style="width: 250px;" /></td>	<td><input type="text" name="fs_tag[]" value="'.$mr['tag'].'" style="width: 350px;" /></td>	<td style="padding: 0px;">	<!-- a target="_blank" href="'.$mr['img'].'"><img src="'.$mr['img'].'" style="width: 20px; margin: 0px; padding: 0px;" /></a -->		<input type="file" name="fs_img_'.($pi-1).'" style="width: 250px;" />	</td></tr>';//	create_post($mr);	}//}$itfr .= '</table>';$reqntnt .= $itfr.'</form><script>function shh_tfld(o){var fid = o.name.replace("tbtn_", "tfld_");var el = document.getElementById(fid);	if(o.checked){ el.style.display = "block"; }	else { el.style.display = "none"; }	return;}function dscopy(dv){var el1 = document.getElementsByName("fs_dsc[]");var el2 = document.getElementsByName("fs_sdsc[]");	for (i = 0; i <= el1.length - 1; i++) {		if(dv>0){			if(i>0 && el1[i].value==""){ el1[i].value = el1[i-1].value; }			if(i>0 && el2[i].value==""){ el2[i].value = el2[i-1].value; }			}		else{ el1[i].value = ""; el2[i].value = ""; }		}	return;}//document.getElementById("put_tag").onclick = function() {//var chboxes = document.querySelectorAll(\'input[type="checkbox"]\');//}</script>';////////////////////////// */function prsvpricelst($id){ global $dbh;	$res = mysqli_query($dbh, "SELECT * FROM cr_vndpl WHERE ID='$id'") or die (mysqli_error($dbh));	return mysqli_fetch_row($res);}function csv_r($n){	$cr = array();	if(($handle = fopen($n, 'r')) !== FALSE) {		set_time_limit(0); 		// necessary if a large csv file		$row = 0;		while(($data = fgetcsv($handle, 1000, ',')) !== FALSE) {			$col_count = count($data);			for($col=0; $col<$col_count; $col++){				$cr[$row][$col]=$data[$col];				}			$row++;			}		fclose($handle);		}	return $cr;}function _________create_post($r){		$post = array(		'post_title' => $r['ttl'],		'post_name'  => $r['slg'],		'post_status' => 'publish',		'post_type' => 'product',		'post_content' => 'Lucky Dooo',		'post_excerpt' => 'JovgyyDooo',		'meta_input' => array(			'_regular_price' => $r['rpr'],			'_sku' => $r['sku']			),		'post_author' => 1		);$cats = explode(',', $r['cat']);$tags = explode(',', $r['tag']);//return;    $new_post_id = wp_insert_post($post);	wp_set_object_terms( $new_post_id, 'simple', 'product_type' );	wp_set_object_terms($new_post_id, $cats, 'product_cat');	wp_set_object_terms($new_post_id, $tags, 'product_tag');//update_post_meta( $new_post_id, '_price', '156' );	$getImageFile = $r['img']; //"https://waverlycabinets.com/qbw/files/dump/lart/MB30.jpg";	$attach_id  = attchImg($getImageFile,  $new_post_id, 0);	add_post_meta($new_post_id, '_thumbnail_id', $attach_id); 	set_imgattr( $attach_id, $new_post_id );	}function attchImg($image_url, $post_id, $imn){    $upload_dir = wp_upload_dir();    $image_data = file_get_contents($image_url);    $filename = $imn . '-' . basename($image_url);	    if (wp_mkdir_p($upload_dir['path'])) { $file = $upload_dir['path'] . '/' . $filename; } 	else                                 { $file = $upload_dir['basedir'] . '/' . $filename; }    file_put_contents($file, $image_data);    $wp_filetype = wp_check_filetype($filename, null);    $attachment = array(        'post_mime_type' => $wp_filetype['type'],        'post_title' => sanitize_file_name($filename),        'post_content' => '',        'post_status' => 'inherit',    );    $attach_id = wp_insert_attachment($attachment, $file, $post_id);    require_once ABSPATH . 'wp-admin/includes/image.php';    $attach_data = wp_generate_attachment_metadata($attach_id, $file);    $res1 = wp_update_attachment_metadata($attach_id, $attach_data);    return $attach_id;}function ___Generate_Featured_Image( $image_url, $post_id  ){    $upload_dir = wp_upload_dir();    $image_data = file_get_contents($image_url);    $filename = basename($image_url);    if(wp_mkdir_p($upload_dir['path']))     $file = $upload_dir['path'] . '/' . $filename;    else                                    $file = $upload_dir['basedir'] . '/' . $filename;    file_put_contents($file, $image_data);    $wp_filetype = wp_check_filetype($filename, null );    $attachment = array(        'post_mime_type' => $wp_filetype['type'],        'post_title' => sanitize_file_name($filename),        'post_content' => '',        'post_status' => 'inherit'    );    $attach_id = wp_insert_attachment( $attachment, $file, $post_id );    require_once(ABSPATH . 'wp-admin/includes/image.php');    $attach_data = wp_generate_attachment_metadata( $attach_id, $file );    $res1= wp_update_attachment_metadata( $attach_id, $attach_data );    $res2= set_post_thumbnail( $post_id, $attach_id );}function hgnric($r, $v){$ir = array();if($v=='cnc'){	switch($r[0]){		default: break;			}	}if($v=='ghi'){	switch($r[0]){		case 'GCSFFLOORNM': 			$ir['sku']=$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='GHI Maple Shelf For Sink Front NM-CSFFLOOR';			$ir['cat']='Accessories, GHI';			$ir['tag']='accessories, accessories-other, ghi, richmond-auburn, new-castle-gray, nantucket-linen, stone-harbor-gray, arcadia-linen, arcadia-white-shaker, sedona-chestnut, regal-oak, charleston-traditional-cognac';			$ir['img']='';			$ir['seo']='';		break;		case 'GSCHWDC':			$ir['sku']=$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='GHI Soft Close Hinge for WDC Cabinet';			$ir['slg']='ghi-soft-close-hinge-for-wdc-cabinet';			$ir['cat']='Accessories, GHI';			$ir['tag']='accessories, accessories-other, ghi, richmond-auburn, new-castle-gray, nantucket-linen, stone-harbor-gray, arcadia-linen, arcadia-white-shaker, sedona-chestnut';			$ir['img']='';			$ir['seo']='';		break;		case 'GSCH138':			$ir['sku']=$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='GHI Soft Close Hinge 1 3/8';			$ir['slg']='ghi-soft-close-hinge-1-38';			$ir['cat']='Accessories, GHI';			$ir['tag']='accessories, accessories-other, ghi, nantucket-linen, sedona-chestnut';			$ir['img']='';			$ir['seo']='';		break;		case 'GSCH114':			$ir['sku']=$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='GHI Soft Close Hinge 1 1/4';			$ir['slg']='ghi-soft-close-hinge-1-14';			$ir['cat']='Accessories, GHI';			$ir['tag']='accessories, accessories-other, ghi, richmond-auburn, new-castle-gray, stone-harbor-gray, arcadia-linen, arcadia-white-shaker';			$ir['img']='';			$ir['seo']='';		break;		case 'JKCCB':			$ir['sku']=$r[0];			$ir['prf']='CCB';			$ir['rpr']=$r[2];			$ir['ttl']='Jiffy Kit-Concord Blue';			$ir['slg']='jiffy-kit-concord-blue';			$ir['cat']='Cabinets, GHI Concord Blue';			$ir['tag']='accessories, accessories-other, ghi, concord-blue';			$ir['img']='';			$ir['seo']='';		break;		default: break;			}	}if($v=='fl'){	switch($r[0]){		case 'FSCHWDC':			$ir['sku']=$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='Feather Lodge Soft Close Hinge for WDC Cabinet';			$ir['slg']='feather-lodge-soft-close-hinge-for-wdc-cabinet';			$ir['cat']='Accessories, Feather Lodge';			$ir['tag']='accessories, accessories-other, feather-lodge, Grand Reserve Cherry, Newport White';			$ir['img']='';			$ir['seo']='';		break;		case 'FSCH114':			$ir['sku']=$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='Feather Lodge Soft Close Hinge 1 1/4';			$ir['slg']='feather-lodge-soft-close-hinge-1-1-4';			$ir['cat']='Accessories, Feather Lodge';			$ir['tag']='accessories, accessories-other, feather-lodge, Grand Reserve Cherry, Newport White';			$ir['img']='';			$ir['seo']='';		break;		case 'SCG':			$ir['sku']='F'.$r[0];			$ir['prf']=NULL;			$ir['rpr']=$r[2];			$ir['ttl']='Feather Lodge Kitchen Soft Close Drawer Glides';			$ir['slg']='feather-lodge-kitchen-soft-close-drawer-glides';			$ir['cat']='Accessories, Feather Lodge';			$ir['tag']='accessories, accessories-other, feather-lodge';			$ir['img']='';			$ir['seo']='';		break;		default: break;			}	}return $ir;}function get_findx($r){	$ind = 0;	while(isset($r[$ind])){ $ind++; }	return $ind;}function mtc($rx){ global $fsku;	if(preg_match("/^$rx$/", $fsku, $pm)){	return $pm; }		return NULL;}function bldttg(Array $ttl, Array $tag){ global $ir;	foreach($ttl as $tl){ array_push($ir['ttl'], $tl); }	foreach($tag as $tg){ array_push($ir['tag'], $tg); } 	return $ir;	}function pickcatUSCD($pfx){ global $ir;		switch($pfx){		case 'SA':	array_push($ir['ttl'], 'Shaker Antique White'); 					array_push($ir['cat'], 'US Cabinet Depot Shaker Antique White'); 					array_push($ir['tag'], 'shaker-antique-white'); 					break;		case 'SW':	array_push($ir['ttl'], 'Shaker White'); 					array_push($ir['cat'], 'US Cabinet Depot Shaker White');					array_push($ir['tag'], 'shaker-white'); 					break;		case 'YW':	array_push($ir['ttl'], 'York Antique White');					array_push($ir['cat'], 'US Cabinet Depot York Antique White');					array_push($ir['tag'], 'york-antique-white'); 					break;		case 'CS':	array_push($ir['ttl'], 'Casselberry Saddle');					array_push($ir['cat'], 'US Cabinet Depot Casselberry Saddle');					array_push($ir['tag'], 'casselberry-saddle'); 					break;		case 'CW':	array_push($ir['ttl'], 'Casselberry Antique White');					array_push($ir['cat'], 'US Cabinet Depot Casselberry Antique White');					array_push($ir['tag'], 'casselberry-antique-white'); 					break;		case 'TW':	array_push($ir['ttl'], 'Torrance White');					array_push($ir['cat'], 'US Cabinet Depot Torrance White');					array_push($ir['tag'], 'torrance-white');					break;		case 'TD':	array_push($ir['ttl'], 'Torrance Dove');					array_push($ir['cat'], 'US Cabinet Depot Torrance Dove');					array_push($ir['tag'], 'torrance-dove');					break;		case 'SC':	array_push($ir['ttl'], 'Shaker Cinder');					array_push($ir['cat'], 'US Cabinet Depot Shaker Cinder');					array_push($ir['tag'], 'shaker-cinder');					break;		case 'SG':	array_push($ir['ttl'], 'Shaker Grey');					array_push($ir['cat'], 'US Cabinet Depot Shaker Grey');					array_push($ir['tag'], 'shaker-grey');					break;		case 'SD':	array_push($ir['ttl'], 'Shaker Dove');					array_push($ir['cat'], 'US Cabinet Depot Shaker Dove');					array_push($ir['tag'], 'shaker-dove');					break;		case 'ROS':	array_push($ir['ttl'], 'Riviera Oyster Shell'); 					array_push($ir['cat'], 'US Cabinet Depot Riviera Oyster Shell'); 					array_push($ir['tag'], 'riviera-oyster-shell'); 					break;		case 'TWP':	array_push($ir['ttl'], 'Torino White Pine'); 					array_push($ir['cat'], 'US Cabinet Depot Torino White Pine');					array_push($ir['tag'], 'torino-white-pine'); 					break;		case 'TGW':	array_push($ir['ttl'], 'Torino Grey Wood'); 					array_push($ir['cat'], 'US Cabinet Depot Torino Grey Wood');					array_push($ir['tag'], 'torino-grey-wood'); 					break;		case 'TDW':	array_push($ir['ttl'], 'Torino Dark Wood'); 					array_push($ir['cat'], 'US Cabinet Depot Torino Dark Wood');					array_push($ir['tag'], 'torino-dark-wood'); 					break;		case 'PGW':	array_push($ir['ttl'], 'Palermo Gloss White'); 					array_push($ir['cat'], 'US Cabinet Depot Palermo Gloss White');					array_push($ir['tag'], 'palermo-gloss-white'); 					break;		case 'VMN':	array_push($ir['ttl'], 'Verona Midnight Navy'); 					array_push($ir['cat'], 'US Cabinet Depot Verona Midnight Navy');					array_push($ir['tag'], 'verona-midnight-navy'); 					break;		case 'VSG':	array_push($ir['ttl'], 'Verona Storm Grey'); 					array_push($ir['cat'], 'US Cabinet Depot Verona Storm Grey');					array_push($ir['tag'], 'verona-storm-grey'); 					break;		case 'VPB':	array_push($ir['ttl'], 'Verona Pure Blank'); 					array_push($ir['cat'], 'US Cabinet Depot Verona Pure Blank');					array_push($ir['tag'], 'verona-pure-blank'); 					break;		case 'RCS':	array_push($ir['ttl'], 'Riviera Conch Shell'); 					array_push($ir['cat'], 'US Cabinet Depot Riviera Conch Shell');					array_push($ir['tag'], 'riviera-conch-shell'); 					break;		default:   break;		}}?>