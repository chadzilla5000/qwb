<?phprequire_once('inc/_init.php');require_once('inc/functions/general.php');if($lghsh['Id'] == 0){	require_once('inc/functions/authorization.php'); 	$pgcontent = logform(); 	}include_once 'inc/functions.php';include_once 'wconfig.php';setlocale(LC_MONETARY, 'en_US');error_reporting(E_ALL | E_STRICT);//error_reporting(E_ERROR | E_WARNING | E_PARSE);///////////////////////////////////////////////////////////////////////////////$ln = 'madison-latte'; //(isset($_GET['br']))?$_GET['br']:NULL;$postp = NULL;$dflag = true;ini_set('memory_limit', '2048M');set_time_limit ( 1500 );$ofs = 0;$ppp  = -1;if(isset($_POST) AND sizeof($_POST)>0){	foreach($_POST as $k=>$sk){		if(preg_match('/(pr_)([\d]{1,9})/', $k, $m)){			$pid = $m[2];//			wp_set_object_terms($pid, 'variable', 'product_type');//			wp_set_object_terms($pid, 'simple', 'product_type');			$prod = wc_get_product($pid);//echo $prod->get_type();//$prod->save();		echo '<a target="_blank" href="'.SITE_URL.'/wp-admin/post.php?post='.$pid.'&action=edit">'.$prod->get_sku() . '</a><br>';$attr_name = 'SRAssembly';$attr_options = array('SR','ASSEMBLED');$data = new stdClass();$data->sku = $prod->get_sku().'-SR';$data->price = '1301';//Create variationspricode_create_variations( $pid, ['SRAssembly' => 'SR'], $data );//wp_set_object_terms($pid, 'variable', 'product_type');//update_post_meta($pid, '_default_attributes', array($attr_name => 'SR'));if ($prod->is_type( 'variable' )) { //echo 'Variable';  $available_variations = $prod->get_available_variations();  foreach ($available_variations as $key => $v) {//	  echo $v->_regular_price . '<br>';  }}					}	}echo '<a href="" name="bck" >go back</a>';}else{$wsiarr = getwsline($ln, $ppp, $ofs); /// Get items array from website by brand name (Sku, Title, Regular price, Sale price) /////////////////////*$sbt = '<form name="S2V" method="post" action=""><table>';$di=0;foreach($wsiarr as $it){	$probj = wc_get_product($it->ID);$drpr = ($probj->is_type( 'variable' ))?'-':$it->_regular_price;$vinp = ($probj->is_type( 'variable' ))?'':'<input type="checkbox" name="pr_'.$it->ID.'" value="1" />';	$sbt .= '<tr><td>'.++$di.'.</td><td><img style="height: 50px;" src="'.wp_get_attachment_url( $probj->get_image_id() ).'" /></td><td>'.$vinp. $it->ID. '</td><td>' . $it->_sku.'</td><td>' . $drpr .'</td></tr>';	}$sbt .= '</table><input type="submit" name="submit" value="Submit" /></form>';echo $sbt;//echo create_global_attribute('SRAssembly');}exit;/** * Create a variable product on woocommerce * @return int Product ID */function pricode_create_product(){    $product = new WC_Product_Variable();    $product->set_description('T-shirt variable description');    $product->set_name('T-shirt variable');    $product->set_sku('test-shirt');    $product->set_price(1);    $product->set_regular_price(1);    $product->set_stock_status();    $product->save();    return $product;}/** * Create Product Attributes  * @param  string $name    Attribute name * @param  array $options Options values * @return Object          WC_Product_Attribute  */function pricode_create_attributes( $name, $options ){    $attribute = new WC_Product_Attribute();    $attribute->set_id(0);    $attribute->set_name($name);    $attribute->set_options($options);    $attribute->set_visible(true);    $attribute->set_variation(true);    return $attribute;}/** * [pricode_create_variations description] * @param  [type] $product_id [description] * @param  [type] $values     [description] * @return [type]             [description] */function pricode_create_variations( $product_id, $values, $data ){    $variation = new WC_Product_Variation();    $variation->set_parent_id( $product_id );    $variation->set_attributes($values);    $variation->set_status('publish');    $variation->set_sku($data->sku);    $variation->set_price($data->price);    $variation->set_regular_price($data->price);    $variation->set_stock_status();    $variation->save();    $product = wc_get_product($product_id);    $product->save();}/*//Adding product$product = pricode_create_product();//Creating Attributes $atts = [];$atts[] = pricode_create_attributes('SRAssembly',['SR', 'ASSEMBLED']);//$atts[] = pricode_create_attributes('size',['S', 'M']);//Adding attributes to the created product$product->set_attributes( $atts );$product->save();//Setting data (following Alexander's rec$data = new stdClass();$data->sku = 'sku-123';$data->price = '10';//Create variationspricode_create_variations( $product->get_id(), ['color' => 'red', 'size' => 'M'], $data );*/function getwsline($line, $ppp, $offs){if(!$line){return NULL;}$inc=0;	$itarr = array();$args = array(	'post_type'             => 'product',	'post_status'           => 'publish',//	'fields' => 'ids',//	'fields' => 'sku',	'ignore_sticky_posts'   => 1,	'offset' 				=> $offs,	'posts_per_page'        => $ppp,	'tax_query' => array(		array(			'taxonomy' => 'product_tag',			'field' => 'slug',			'terms' => $line,			'operator' => 'IN',			)		),	);//$items = get_posts_fields( $args ); $items = get_posts( $args ); return $items; }?>