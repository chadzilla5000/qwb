<?phprequire_once('inc/_init.php');require_once('inc/functions/general.php');if($lghsh['Id'] == 0){	require_once('inc/functions/authorization.php'); 	$pgcontent = logform(); 	}include_once 'inc/functions.php';include_once 'wconfig.php';setlocale(LC_MONETARY, 'en_US');error_reporting(E_ALL | E_STRICT);//error_reporting(E_ERROR | E_WARNING | E_PARSE);///////////////////////////////////////////////////////////////////////////////$brand = (isset($_GET['br']))?$_GET['br']:NULL;$postp = NULL;$dflag = true;ini_set('memory_limit', '2048M');set_time_limit ( 1500 );// $product = wc_get_product(323774);// $terms = get_the_terms( 323774, 'product_cat' )[0];// drc($terms);		// $img_title = $product->get_name();		// $slug = $product->get_slug();//		$tcat = $product->get_category();//echo $terms->slug.'<br>';// drc($terms);//create_variation(330110);// The variation data$variation_data =  array(    'attributes' => array(        'AssemblyLR'  => 'RIGHT',        'AssemblyRTA' => 'RTA',    ),    'sku'           => 'Y-RIGHT',    'regular_price' => '22.00',    'sale_price'    => '',    'stock_qty'     => 10,);// The function to be run//create_var( create_var(), $variation_data );//create_var_product('deavai722', 350, 'R-ssho mil');if(isset($_POST['sku_update']) OR isset($_POST['sku_unpub'])){	if(isset($_POST['ws_skubx'])){ WC_Update($_POST['ws_skubx']); }	if(isset($_POST['vn_skubx'])){ 		foreach($_POST['vn_skubx'] as $dr){echo $dr.'<br>';}			}		//	vn_skubx[]//	WC_Update($_POST['ws_skubx']);		}if(isset($_POST['sku_create'])){ $dflag = false;	if(isset($_POST['vn_skubx'])){ require_once('createsku.php'); }	}	if(isset($_POST['submit2publish'])){	$attid = NULL;	foreach($_POST['fs_sku'] as $dk=>$dsk){		$gr = array();		if($_POST['fs_chk_'.$dk]){			if(isset($_FILES['fs_img_'.$dk]) AND $_FILES['fs_img_'.$dk]['name']){				$imnm = formslug($_POST['fs_ttl'][$dk]);				$attid = create_WCimg($_FILES['fs_img_'.$dk]['name'], $_FILES['fs_img_'.$dk]['tmp_name'], $imnm);				}				//			$nid = 	create_variable_product($_POST, $dk, 1);			$nid = create_WCsku($_POST, $dk, get_variatype($_POST['sku_body'][$dk])); /*	$post = array(		'post_title'   => $_POST['fs_ttl'][$i],		'post_status'  => 'publish',		'post_type'    => 'product',		'post_content' => $_POST['fs_dsc'][$i],		'post_excerpt' => $_POST['fs_sdsc'][$i],		'meta_input'   => array(			'_regular_price'=> $gr['fs_rpr'][$i],			'_sale_price'	=> NULL,			'_sku'			=> $_POST['fs_sku'][$i],			'_visibility'	=> 'visible',			'_stock_status'	=> 'instock',			'_downloadable' => 'no',			'_weight'		=> 50,			'_length'		=> 80,			'_width'		=> 60,			'_height'		=> 20			),		'post_author'  => 1		);//$nid = create_product_variation($post);$nid = create_product_variation( array(    'author'        => '', // optional    'title'         => $_POST['fs_ttl'][$dk],    'content'       => $_POST['fs_dsc'][$dk],    'excerpt'       => $_POST['fs_sdsc'][$dk],    'regular_price' => $_POST['fs_rpr'][$dk], // product regular price    'sale_price'    => NULL, // product sale price (optional)    'stock'         => '10', // Set a minimal stock quantity    'image_id'      => '', // optional    'gallery_ids'   => array(), // optional    'sku'           => $_POST['fs_sku'][$dk], // optional    'tax_class'     => '', // optional    'weight'        => '50', // optional    // For NEW attributes/values use NAMES (not slugs)    'attributes'    => array(        'AssemblyLR'   =>  array('RTA','LEFT','RIGHT' ),    ),) );//////////////// */			$postp .= '<div><a href="'.SITE_URL.'/wp-admin/post.php?post='.$nid.'&action=edit" target="_blank">'.$_POST['fs_ttl'][$dk].'</a></div>';			if($attid){	tie_WCimg($attid, $nid); }			//			if($variable)			}		}	}$wsitt = getwsitems2($brand, -1, 0);$ttitmt = sizeof($wsitt);$ofs = (isset($_GET['ofs']))?$_GET['ofs']:0;$ppp = (isset($_GET['ppg']))?$_GET['ppg']:10000;$pgs = floor($ttitmt/$ppp);$lnkln = '<a href="'.SITE_URL.'/qbw/cmpUVW.php?dm=0&sel=0&ofs=0&ppg=0&br="></a>&nbsp;&nbsp;';if(isset($_GET['dm']) AND $_GET['dm']){$ppp = -1;}else{$ofb = 0;for($i=0;$i<=$pgs;$i++){	$lnkln .= '<a style="color: #fff; font-weight: bold;" href="'.SITE_URL.'/qbw/cmpUVW.php?dm=0&sel=0&ofs='.$ofb.'&ppg='.$ppp.'&br='.$brand.'">'.($i+1).'</a>&nbsp;&nbsp;';	$ofb += $ppp;}}$ofs_1 = 0;$ppp_1 = 10000;$wsiarr = getwsitems2($brand, $ppp, $ofs); /// Get items array from website by brand name (Sku, Title, Regular price, Sale price) ///////////////////foreach ($wsiarr as $vg){	echo $vg['sku'].'<br>'; } exit;$mcls = (isset($_GET['sel']))?$_GET['sel']:0;//drc($wsiarr);$sbm_bttn = NULL;if($mcls==2){ $sbm_bttn = '<input type="submit" name="sku_update" value="Update Sku" style="padding: 3px 9px;" />'; }$vnd = $vnd2 = NULL;switch($brand){	case 'aurafina'			: $vnd = 'AF'; break;	case 'cnc'				: $vnd = 'CNC'; break;	case 'cubitac'			: $vnd = 'CBT'; break;	case 'us-cabinet-depot'	: $vnd = 'USCD'; $vnd2 = 'USCD0'; break;	case 'ghi'				: $vnd = 'GHI'; break;	case 'feather-lodge'	: $vnd = 'FL'; break;	case 'forevermark'		: $vnd = 'TSG'; break;}$vndarr = array(); $vi = 0;$treslt = mysqli_query($dbh, "SELECT * FROM cr_vndpl WHERE Vnd='$vnd' OR Vnd='$vnd2' ORDER BY ID ASC") or die (mysqli_error($dbh));while ($trc = mysqli_fetch_array($treslt)) {  	$vndarr[$vi]['vsku']=$trc['SkuWC']; 	$vndarr[$vi]['vprc']=$trc['VPr']; 	$vi++;	}$inc = $inc_all = $in_1 = $in_2 = 0;$bdy = NULL;$chbchk = '';$chbdsb = 'disabled="disabled"';$buttoname = NULL;$vw=array();if(isset($_GET['dm']) AND $_GET['dm']){       ////////////////////        Vendor -> Website //////////////////////////////////	$vw[0] = 'Vendor'; $vw[1] = 'WCWeb';	if($mcls==1){ $sbm_bttn = '<input type="submit" name="sku_create" value="Create Sku" style="padding: 3px 9px;" />'; }	$tmquery = "SELECT * FROM cr_vndpl WHERE Vnd='$vnd' OR Vnd='$vnd2' ORDER BY ID ASC LIMIT ".$ofs_1.','.$ppp_1; 	$tresult = mysqli_query($dbh, $tmquery) or die (mysqli_error($dbh));	if($brand){		while ($tr = mysqli_fetch_array($tresult)) { $inc_all++;//if($inc_all>4100){break;}//			if(!$tr['VPr']>0) {continue;}			$fsku = $tr['Ln'].'-'.preg_replace('/^W/','',$tr['Sku']);//echo $tr['SkuWC'].'<br>';			//			$ws = get_wsku($wsiarr, $fsku);//$ws = (array_search($tr['SkuWC'], $wsiarr))?$tr['SkuWC']:NULL;			$ws = get_wsku($wsiarr, $tr['SkuWC']);//			if(!$ws AND !$dflag){continue;}			$vs = (isset($ws['ptype']))?(($ws['ptype'])?'Variable':'Simple'):NULL;$vpr = intval($tr['VPr']);$rpr = intval($ws['rprice']);			$st1 = (!$tr['Sku'])?'background: #fc9;':'';//			$st2 = (isset($ws['sku']) AND ($tr['VPr']>0) AND ($ws['sku']) AND ($tr['VPr'] != $ws['rprice'] AND $tr['VPr'] != $ws['price']))?'background: #fc9;':'';			$st2 = (isset($ws['sku']) AND ($vpr>0) AND ($ws['sku']) AND ($vpr != $rpr))?'background: #fc9;':'';			if($ws){ if($mcls==1){continue;} }			else{ $in_1++; }//			if(!$ws OR $tr['VPr']==$ws['rprice'] OR $tr['VPr']==$ws['price']){ if($mcls==2){continue;}	}			if(!$ws OR $vpr==$rpr){ if($mcls==2){continue;}	}			else{ $in_2++; }			if($mcls==1 OR $mcls==2){$chbdsb='';}			$bdy.='<tr><td style="color: #ccc;">'.++$inc.'</td>	<td><input type="checkbox" name="vn_skubx[]" value="'.$tr['Sku'].'::'.$tr['Ln'].'::'.$tr['Title'].'::'.$tr['VPr'].'::'.$tr['UData'].'" '.$chbchk.' '.$chbdsb.' /></td>		<td>'.$tr['Sku'].'</td>	<td>'.$tr['Ln'].'</td>	<td style="text-align: right;">'.$tr['VPr'].'</td>	<td style="width: 150px; border-right: solid 2px #f00;">'.$tr['UData'].'</td>	<td style="width: 200px;color: #999;">'.$vs.'</td>	<td>'.((isset($ws))?$ws['id']:NULL).'</td>	<td><a target="_blank" href="'.SITE_URL.'/wp-admin/post.php?post='.$ws['id'].'&action=edit">'.((isset($ws))?$ws['sku']:NULL).'</a></td>	<td><a target="_blank" href="'.SITE_URL.'/product/'.$ws['slug'].'/">'.((isset($ws))?$ws['title']:NULL).'</a></td>	<td style="text-align: right; '.$st2.'">'.((isset($ws))?(($ws['rprice'])?$ws['rprice']:$ws['price']):NULL).'</td></tr>';				}  // Cycle end  ////////////////////////////////////////////////////////////////////		}	}/*	<td>'.$ws['id'].'</td>	<td>'.$ws['sku'].'</td>	<td>'.$ws['title'].'</td>	<td style="text-align: right; '.$st2.'">'.$ws['rprice'].'</td>*/else{                               ////////////////////        Website -> Vendor //////////////////////////////////	$st1 = $st2 = NULL;	$vw[0] = 'WCWeb'; $vw[1] = 'Vendor';	if($mcls==1){ $sbm_bttn = '<input type="submit" name="sku_unpub" value="Unpublish Sku" style="padding: 3px 9px;" />'; }	if($brand){		foreach($wsiarr as $wsarr){ $inc_all++; // Cycle begin //////////////////////////////////////////////////////*//if(preg_match('/(.*)([\d\d]{3})$/', $wsarr['sku']) OR preg_match('/(.*)([\d\d]{4})$/', $wsarr['sku']) OR preg_match('/(.*)([\d\d]{4})(X)([\d\d]{2})$/', $wsarr['sku'])){//if(preg_match('/(.*)(21)$/', $wsarr['sku'])){echo '<div><div style="width: 200px; float: left; color: #009;">'.++$in_1.' - '.$wsarr['sku'].'</div><div style="width: 200px; float: left;">'.$wsarr['title'].'</div>';//	$terms = get_the_terms( $wsarr['id'], 'product_tag' );	// foreach($terms as $trm){		// echo '<div style="float: left; margin: 0px 8px; color: #960;">'.$trm->name.'</div>';	// }echo '</div><div style="clear: both;"></div>';//}continue;////////  *//*       // Tool to clean "Sale Price"  if($inc_all>=0 AND $inc_all<2000){//if(0){		$prod = wc_get_product($wsarr['id']);$msmflag=0;//		$prod->set_sale_price( NULL );		if($prod->is_type('variable')){ //// For variables items  ////////////////////			foreach($prod->get_available_variations() as $var){//				echo $var->_get_meta('_regular_price').'<br>';				$vpr= new WC_Product_Variation( $var['variation_id'] );$reg_pr = $vpr->regular_price;$sal_pr = get_post_meta( $var['variation_id'], '_price', true);echo $vpr->sku.' : ';if($reg_pr != $sal_pr){$msmflag=1;			#Step 4: You have the data. Have fun :)			echo '<span style="color: #f00;">'.$reg_pr.' - - - '.$sal_pr.'</span>';}		echo '<br>';				//				update_post_meta( $var['variation_id'], '_sale_price', NULL );//		$prod->save();				}			}if($msmflag){$prod->save();}}*/		if(array_search($wsarr['sku'], $vndarr)){	echo $wsarr['sku'].'<br>';	}			$varr = getvendorptbl($wsarr['sku']);if(!$varr){ $varr = getvendorptbl($wsarr['sku'].' NEW'); }			if($varr){ if($mcls==1){ continue; } }			else{ $in_1++; }//$gbg=( $wsarr->is_type( 'variable' ) )?'#fc0':'#000';			if(!$varr OR $varr['VPr']==$wsarr['rprice']){ if($mcls==2){continue;}}			else{ $in_2++; }			if($mcls==1 OR $mcls==2){$chbdsb='';}			$uprc = floatval( getrvprice($wsarr['id']));			///*			//	echo $wsarr['sku'].' --- '.$uprc . '<br>';		/// */			$st1 = (!$varr['Sku'])?'background: #fc9;':'';//			$st2 = (($varr['VPr']) AND ($wsarr['rprice']) AND ($wsarr['rprice']!=$varr['VPr']))?'background: #fc9;':'';			$st2 = (($varr['VPr']) AND ($uprc!=$varr['VPr']))?'background: #fc9;':'';/*			$bdy.='<tr><td style="color: #999;">'.++$inc.'</td>	<td><input type="checkbox" name="ws_skubx[]" value="'.$wsarr['id'].'::'.$varr['VPr'].'" '.$chbchk.' '.$chbdsb.' /></td>	<td style="'.$st1.'"><a target="_blank" href="'.SITE_URL.'/wp-admin/post.php?post='.$wsarr['id'].'&action=edit">'.$wsarr['sku'].'</a></td>	<td style="'.$st1.'"><a target="_blank" href="'.SITE_URL.'/product/'.$wsarr['slug'].'/">'.$wsarr['title'].'</a></td>	<td style="text-align: right; '.$st1.' '.$st2.'">'.$uprc.'</td>	<td style="width: 150px; border-right: solid 2px #f00;"></td>	<td style="width: 200px;color: #999;"></td>	<td></td>	<td>'.$varr['Sku'].'</td>	<td>'.$varr['VPr'].'</td>	<td></td></tr>';	////////// */			$bdy.='<tr><td style="color: #999;">'.++$inc.'</td>	<td><input type="checkbox" name="ws_skubx[]" value="'.$wsarr['id'].'::'.$varr['VPr'].'" '.$chbchk.' '.$chbdsb.' /></td>	<td style="'.$st1.'">'.$wsarr['sku'].'</td>	<td style="'.$st1.'"></td>	<td style="text-align: right; '.$st1.' '.$st2.'">'.$uprc.'</td>	<td style="width: 150px; border-right: solid 2px #f00;"></td>	<td style="width: 200px;color: #999;"></td>	<td></td>	<td>'.$varr['Sku'].'</td>	<td>'.$varr['VPr'].'</td>	<td></td></tr>';				}  // Cycle end  ////////////////////////////////////////////////////////////////////		}	}		$subcontent = ($dflag)?'<form method="post" name="bfmm31" action="#"><table id="LTbl" cellspacing="1"><tr><th><input type="number" style="width: 50px" name="numslct" value="16" /></th>	<th style="border: solid 1px #f60; border-width: 1px 0px 0px 2px; color: #f60;"><input type="checkbox" name="chckall" id="chckall" value="1" OnChange="chckallbx(this);" /></th>	<th style="border: solid 1px #f60; border-width: 1px 2px 0px 0px; color: #f60;" colspan="4">'.$vw[0].'</th>	<th></th>	<th style="border: solid 1px #f60; border-width: 1px 2px 0px 2px; color: #f60;" colspan="4">'.$vw[1].'</th></tr><tr><th></th>	<th></th>	<th></th>	<th></th>	<th></th>	<th></th>	<th>'.$sbm_bttn.'</th>	<th></th>	<th></th>	<th></th>	<th></th></tr>'.$bdy.'</table></form>':'';$chkdirection_optlist = array(	'<option value="1">Vendor -> Website</option>',	'<option value="0">Website -> Vendor</option>',);$br_optlist = array(	'<option value="">Select Vendor</option>',	'<option value="aurafina">Aurafina</option>',	'<option value="cnc">CNC</option>',	'<option value="cubitac">Cubitac</option>',	'<option value="feather-lodge">Feather Lodge</option>',	'<option value="forevermark">Forevermark</option>',	'<option value="ghi">GHI</option>',	'<option value="msi">MSI</option>',	'<option value="us-cabinet-depot">USCD</option>',);$pgtitle = '<h4>Prices synchronization</h4>';//$pgcontent = <<<EOD__$pgcontent = '<!-- Page content start --><style>#TopLn{	width: 100%;	height: 20px;	background: #009; 	background-image: linear-gradient(to left, #012, #09c); 	padding: 3px 0px; 	color: #fff;}.vcell{ padding: 1px 3px; background: #fff;}.vcell:first-child {	background: #555; color: #aa9; text-align: right;	min-width: 140px;			}#LTbl td{	padding: 2px 5px;	font: normal 11px "Tahoma";}#LTbl tr:nth-child(odd){  background-color: #eee;}#rsrchdirection:hover{	text-decoration: underline;}</style><div id="TopLn"><div style="float: left;"><a style="margin-left: 35px; color: #fee;" OnClick="return pickurl(0);" href="cmpUVW.php?dm=1&sel=0">All ('.$inc_all.')</a><a style="margin-left: 35px; color: #fee;" OnClick="return pickurl(1);" href="cmpUVW.php?dm=1&sel=1">Not Avail. ('.$in_1.')</a><a style="margin-left: 35px; color: #fee;" OnClick="return pickurl(2);" href="cmpUVW.php?dm=1&sel=2">Price MSM. ('.$in_2.')</a><select style="margin-left: 35px;" name="parsebrand" id="parsebrand" OnChange="prsbrand(this);">'.getopts($br_optlist, $brand).'</select></div><div style="float: left; margin-left: 35px; cursor: pointer" title="Direction switch" id="rsrchdirection" OnClick="sw_direction();">'.(($_GET['dm'])?'Vendor-Website':'Website-Vendor').'</div><div style="float: left; margin-left: 35px;>'.$lnkln.'</div><div style="float: right; margin-right: 35px;"><a href="unipricel.php">U-Price</a></div><div style="clear: both;"></div></div>'.(($postp)?'<div style="margin-top: 20px;">Items posted:</div>'.$postp:'').''.((isset($reqntnt))?$reqntnt:'').''.$subcontent.''.(($postp)?'<div style="margin-top: 50px;">Items posted:</div>'.$postp:'').'
<script>function pickurl(s){var hr = window.location.href;	hr = hr.replace(/\&sel=\d/g, "\&sel="+s);	window.location.href = hr;return false;	}function prsdirection_______(o){	var hr = window.location.href;	if(hr.match(/\?dm=\d/)){ hr = hr.replace(/\?dm=\d/, "\?dm="+o.value); }	window.location.href = hr;}function sw_direction(){var hr = window.location.href;var d = document.getElementById("rsrchdirection");var val;	if(d.innerHTML == "Vendor-Website") { val=0; d.innerHTML = "Website-Vendor"; }	else                                { val=1; d.innerHTML = "Vendor-Website"; }	if(hr.match(/\?dm=\d/))	{ hr = hr.replace(/\?dm=\d/, "\?dm="+val); }	else 					{ hr = hr+"?dm=0"; }	window.location.href = hr;}function prsbrand(o){	var hr = window.location.href;	if(hr.match(/\&br=[\w\-].*/)){ hr = hr.replace(/\&br=[\w\-].*/, "\&br="+o.value); }	else { hr += "\&br="+o.value;}	window.location.href = hr;}document.getElementById("chckall").onclick = function() {var checkboxes = document.querySelectorAll(\'input[type="checkbox"]\');var bi = 0;var b2 = bfmm31.numslct.value;for(var checkbox of checkboxes) { 	if(b2>0 && bi>b2){ return; } 	bi++;	if(!checkbox.disabled){		checkbox.checked = this.checked;		}	}}</script><!-- Page content end -->';$page_title       = 'Unified Management System - Prices';$hsct = 'pl2snch';$page_description = '';$keywords         = '';$head_ext         = '';require_once('inc/_shell.php'); ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////function get_wsku($wsiarr, $sku) {	foreach($wsiarr as $wi){		$skt = $sku; //preg_replace('/ NEW/','',$sku);		if(preg_replace('/\W/','',$sku) == preg_replace('/\W/','',$wi['sku'])){	return $wi;	}//		if($skt == $wi['sku']){	return $wi;	}		}	return null;}function getvendorptbl($s){ global $dbh;	$s = preg_replace('/[^a-zA-Z0-9_ -\/]/s',' ',$s);	return mysqli_fetch_assoc(mysqli_query($dbh, "SELECT Sku, VPr FROM cr_vndpl WHERE SkuWC='$s'"));}function WC_Update($r){//	drc($r);	foreach($r as $dmr){		//		echo $dmr . '<br>';		$marr = explode("::",$dmr);		if($marr[1]){ 			$prod = wc_get_product($marr[0]);			$prod->set_regular_price( $marr[1] );			$prod->set_sale_price( NULL );			if($prod->is_type('variable')){ //// For variables items  ////////////////////				foreach($prod->get_available_variations() as $var){					update_post_meta( $var['variation_id'], '_regular_price', $marr[1] );					update_post_meta( $var['variation_id'], '_sale_price', NULL );					update_post_meta( $var['variation_id'], '_price', $marr[1] );					}				}			$prod->save();			}		else{$uargs = array('ID' => $marr[0], 'post_status' => 'pending');					wp_update_post( $uargs, false );                        			}		}	return;}function WC_Create($r){ $iv = 0;$list = array();foreach($r as $dmr){	$marr = explode("::",$dmr);array_push($list, array($marr[0], $marr[1], $marr[2]));//	echo ++$iv . '. '. $marr[0] . '-' . $marr[1] . ' - ' . $marr[2] . '<br>';	}//		echo '<pre>'; print_r($list); echo '</pre>';//	return;// $list = array (    // array('aaa', 'bbb', 'ccc', 'dddd'),    // array('123', '456', '789'),    // array('"aaa"', '"bbb"')// );$fp = fopen('ghimss.csv', 'w');foreach ($list as $fields) {    fputcsv($fp, $fields);}fclose($fp);	return;}	function create_WCimg($upnm, $tmpn, $newn){	$file_ext = strtolower(end(explode('.',$upnm)));	$ffn = $newn.rand().'.'.$file_ext;	move_uploaded_file($upnm, $ffn);    $upload_dir = wp_upload_dir();    $image_data = file_get_contents($tmpn);    $filename = 'img-' . basename($ffn);	$file = (wp_mkdir_p($upload_dir['path'])) ? $upload_dir['path'] . '/' . $filename : $upload_dir['basedir'] . '/' . $filename ;	file_put_contents($file, $image_data);	$wp_filetype = wp_check_filetype($filename, null);	$attachment = array(		'post_mime_type' => $wp_filetype['type'],		'post_title' => sanitize_file_name($filename),		'post_content' => '',		'post_status' => 'inherit',	);	$attach_id = wp_insert_attachment($attachment, $file);	require_once ABSPATH . 'wp-admin/includes/image.php';	$attach_data = wp_generate_attachment_metadata($attach_id, $file);	wp_update_attachment_metadata($attach_id, $attach_data);	return $attach_id;	}function tie_WCimg($attach_id, $pid){	add_post_meta($pid, '_thumbnail_id', $attach_id); 	set_imgattr( $attach_id, $pid );	return;	}///////////////////function upl_img(){	$newfilename = "newfilename";   if(isset($_FILES['image'])){      $errors= array();      $file_name = $_FILES['image']['name'];      $file_size =$_FILES['image']['size'];      $file_tmp =$_FILES['image']['tmp_name'];      $file_type=$_FILES['image']['type'];      $file_ext = strtolower(end(explode('.',$_FILES['image']['name'])));      $exts = array("jpeg","jpg","png");      if(file_exists($file_name)) {        echo "Sorry, file already exists.";        }      if(in_array($file_ext,$exts)=== false){         $errors[]="extension not allowed, please choose a JPEG or PNG file.";      }      if($file_size > 2097152){         $errors[]='File size must be excately 2 MB';      }      if(empty($errors)==true){        move_uploaded_file($file_tmp,"images/".$newfilename.".".$file_ext);        echo "Success";        echo "<script>window.close();</script>";      }      else{         print_r($errors);      }   }}function getrvprice($id){	$prc = NULL;				$prd = wc_get_product($id);	if($prd->is_type('variable')){ 		foreach($prd->get_available_variations() as $vrd){ $prc = $vrd['display_regular_price']; }		}	else{ $prc = $prd->get_regular_price(); }	return $prc;}function create_variation__________($pid){$variation = new WC_Product_Variation();$variation->set_regular_price(10);$variation->set_parent_id($pid);//Set attributes requires a key/value containing// tax and term slug$variation->set_attributes(array(    'size' => 'blue' // -> removed 'pa_' prefix));//Save variation, returns variation idecho get_permalink ( $variation->save() );return;	}////////////////////////////////////////////////////////////////////////////////////////////////////////** * Save a new product attribute from his name (slug). * * @since 3.0.0 * @param string $name  | The product attribute name (slug). * @param string $label | The product attribute label (name). */function save_product_attribute_from_name( $name, $label='', $set=true ){    if( ! function_exists ('get_attribute_id_from_name') ) return;    global $wpdb;    $label = $label == '' ? ucfirst($name) : $label;    $attribute_id = get_attribute_id_from_name( $name );    if( empty($attribute_id) ){        $attribute_id = NULL;    } else {        $set = false;    }    $args = array(        'attribute_id'      => $attribute_id,        'attribute_name'    => $name,        'attribute_label'   => $label,        'attribute_type'    => 'select',        'attribute_orderby' => 'menu_order',        'attribute_public'  => 0,    );    if( empty($attribute_id) ) {        $wpdb->insert(  "{$wpdb->prefix}woocommerce_attribute_taxonomies", $args );        set_transient( 'wc_attribute_taxonomies', false );    }    if( $set ){        $attributes = wc_get_attribute_taxonomies();        $args['attribute_id'] = get_attribute_id_from_name( $name );        $attributes[] = (object) $args;        //print_r($attributes);        set_transient( 'wc_attribute_taxonomies', $attributes );    } else {        return;    }}/** * Get the product attribute ID from the name. * * @since 3.0.0 * @param string $name | The name (slug). */function get_attribute_id_from_name( $name ){    global $wpdb;    $attribute_id = $wpdb->get_col("SELECT attribute_id    FROM {$wpdb->prefix}woocommerce_attribute_taxonomies    WHERE attribute_name LIKE '$name'");    return reset($attribute_id);}/** * Create a new variable product (with new attributes if they are). * (Needed functions: * * @since 3.0.0 * @param array $data | The data to insert in the product. */function create_product_variation( $data ){    if( ! function_exists ('save_product_attribute_from_name') ) return;    $postname = sanitize_title( $data['title'] );    $author = empty( $data['author'] ) ? '1' : $data['author'];    $post_data = array(        'post_author'   => $author,        'post_name'     => $postname,        'post_title'    => $data['title'],        'post_content'  => $data['content'],        'post_excerpt'  => $data['excerpt'],        'post_status'   => 'publish',        'ping_status'   => 'closed',        'post_type'     => 'product',        'guid'          => home_url( '/product/'.$postname.'/' ),    );    // Creating the product (post data)    $product_id = wp_insert_post( $post_data );    // Get an instance of the WC_Product_Variable object and save it    $product = new WC_Product_Variable( $product_id );    $product->save();    ## ---------------------- Other optional data  ---------------------- ##    ##     (see WC_Product and WC_Product_Variable setters methods)    // THE PRICES (No prices yet as we need to create product variations)    // IMAGES GALLERY    if( ! empty( $data['gallery_ids'] ) && count( $data['gallery_ids'] ) > 0 )        $product->set_gallery_image_ids( $data['gallery_ids'] );    // SKU    if( ! empty( $data['sku'] ) )        $product->set_sku( $data['sku'] );    // STOCK (stock will be managed in variations)    $product->set_stock_quantity( $data['stock'] ); // Set a minimal stock quantity    $product->set_manage_stock(true);    $product->set_stock_status('');    // Tax class    if( empty( $data['tax_class'] ) )        $product->set_tax_class( $data['tax_class'] );    // WEIGHT    if( ! empty($data['weight']) )        $product->set_weight(''); // weight (reseting)    else        $product->set_weight($data['weight']);    $product->validate_props(); // Check validation    ## ---------------------- VARIATION ATTRIBUTES ---------------------- ##    $product_attributes = array();    foreach( $data['attributes'] as $key => $terms ){        $taxonomy = wc_attribute_taxonomy_name($key); // The taxonomy slug        $attr_label = ucfirst($key); // attribute label name        $attr_name = ( wc_sanitize_taxonomy_name($key)); // attribute slug        // NEW Attributes: Register and save them        if( ! taxonomy_exists( $taxonomy ) )            save_product_attribute_from_name( $attr_name, $attr_label );        $product_attributes[$taxonomy] = array (            'name'         => $taxonomy,            'value'        => '',            'position'     => '',            'is_visible'   => 0,            'is_variation' => 1,            'is_taxonomy'  => 1        );        foreach( $terms as $value ){            $term_name = ucfirst($value);            $term_slug = sanitize_title($value);            // Check if the Term name exist and if not we create it.            if( ! term_exists( $value, $taxonomy ) )                wp_insert_term( $term_name, $taxonomy, array('slug' => $term_slug ) ); // Create the term            // Set attribute values            wp_set_post_terms( $product_id, $term_name, $taxonomy, true );        }    }    update_post_meta( $product_id, '_product_attributes', $product_attributes );    $product->save(); // Save the data}function create_variable_product($gr, $i, $vr=0){if($vr==1){ $attr_name = 'assemblylr';	$attr_options = array('LEFT','RIGHT','RTA');	$default_opt = 2;	}	$post = array(		'post_title'   => $gr['fs_ttl'][$i],		'post_status'  => 'publish',		'post_type'    => 'product',		'post_content' => $gr['fs_dsc'][$i],		'post_excerpt' => $gr['fs_sdsc'][$i],		'meta_input'   => array(			'_regular_price'=> $gr['fs_rpr'][$i],			'_sale_price'	=> NULL,			'_sku'			=> $gr['fs_sku'][$i],			'_visibility'	=> 'visible',			'_stock_status'	=> 'instock',			'_downloadable' => 'no',			'_weight'		=> '',			'_length'		=> '',			'_width'		=> '',			'_height'		=> ''			),		'post_author'  => 1		);  $pid = wp_insert_post($post);	$product = new WC_Product_Variable($pid);$product->save();//echo $pid.'<br>';//drc($product);//return $pid;// $product->set_sku( $gr['fs_sku'][$i] );// $product->set_name($gr['fs_ttl'][$i]);$product->set_regular_price($gr['fs_rpr'][$i]);// $product->set_status('publish');wp_set_object_terms($pid, explode(',', $gr['fs_cat'][$i]), 'product_cat');wp_set_object_terms($pid, explode(',', $gr['fs_tag'][$i]), 'product_tag');//$product = wc_get_product($pid);//echo $pid.'<br>';//drc($product);//return;$attr = new WC_Product_Attribute();$attr->set_id( 0 ); // -> SET to 0$attr->set_name($attr_name);$attr->set_options($attr_options);$attr->set_position( 0 );$attr->set_visible( 1 );$attr->set_variation( 1 );$product->set_attributes(array($attr));$product->save();$psku = $product->get_sku();///////////  Create Variations ///////////////////foreach( $attr_options as $option ){ 	$variation = new WC_Product_Variation();	$variation->set_regular_price($product->get_regular_price());	$variation->set_parent_id($pid);//	$variation->set_sku( $psku . '-' . $option );	$variation->set_attributes(array( $attr_name => $option ));	$variation->save();	}//crt_default_variation($pid, 'GNU');//wp_set_object_terms($pid, 'variable', 'product_type');update_post_meta($pid, '_default_attributes', array($attr_name => $attr_options[$default_opt]));return $pid;}function create_WCsku($gr, $i, $v=0){	$post = array(		'post_title'   => $gr['fs_ttl'][$i],		'post_status'  => 'publish',		'post_type'    => 'product',		'post_content' => $gr['fs_dsc'][$i],		'post_excerpt' => $gr['fs_sdsc'][$i],		'meta_input'   => array(			'_regular_price'=> $gr['fs_rpr'][$i],			'_price'		=> $gr['fs_rpr'][$i],			'_sale_price'	=> NULL,			'_sku'			=> $gr['fs_sku'][$i],			'_visibility'	=> 'visible',			'_stock_status'	=> 'instock',			'_downloadable' => 'no',			'_weight'		=> '',			'_length'		=> '',			'_width'		=> '',			'_height'		=> ''			),		'post_author'  => 1		);    $new_post_id = wp_insert_post($post);	$product = wc_get_product($new_post_id);//	$product = new WC_Product_Variable($new_post_id);//	$rpr = $product->get_regular_price();	wp_set_object_terms($new_post_id, explode(',', $gr['fs_cat'][$i]), 'product_cat');	wp_set_object_terms($new_post_id, explode(',', $gr['fs_tag'][$i]), 'product_tag');	$product->save();	if($v)	{ create_product_variations($new_post_id, $v); }//	else	{ $product->save(); }		return $new_post_id;	}function create_product_variations($pid, $vr){$attr_name = $default_opt = NULL;$attr_options = NULL;if($vr==1){ $attr_name = 'assemblylr';	$attr_options = array('LEFT','RIGHT','RTA');	}if($vr==2){ $attr_name = 'assemblyrta';	$attr_options = array('ASSEMBLED','RTA');	}	//$product = new WC_Product_Variable($pid);//$product->save();// $product->set_sku( $sku );// $product->post_title ='THe Post var product';$product = wc_get_product($pid);$attr = new WC_Product_Attribute();$attr->set_id( 0 ); // -> SET to 0$attr->set_name($attr_name);$attr->set_options($attr_options);$attr->set_position( 0 );$attr->set_visible( 1 );$attr->set_variation( 1 );$product->set_attributes(array($attr));$product->save();$psku = $product->get_sku();$option_ext = NULL;///////////  Create Variations ///////////////////foreach( $attr_options as $option ){	$option_ext=($option=='ASSEMBLED')?'ASM':$option;		$variation = new WC_Product_Variation();	$variation->set_parent_id($product->id);	$variation->set_attributes(array( $attr_name => $option ));	$variation->set_sku($psku.'-'.$option_ext);	$variation->set_regular_price($product->get_regular_price());	$variation->save();	}wp_set_object_terms($pid, 'variable', 'product_type');update_post_meta($pid, '_default_attributes', array($attr_name => 'RTA'));return; // $product;}function cr_prod_var( $product_id, $variation_data ){    // Get the Variable product object (parent)    $product = wc_get_product($product_id);    $variation_post = array(        'post_title'  => $product->get_name(),        'post_name'   => 'product-'.$product_id.'-variation',        'post_status' => 'publish',        'post_parent' => $product_id,        'post_type'   => 'product_variation',        'guid'        => $product->get_permalink()    );    // Creating the product variation    $variation_id = wp_insert_post( $variation_post );    // Get an instance of the WC_Product_Variation object    $variation = new WC_Product_Variation( $variation_id );    // Iterating through the variations attributes    foreach ($variation_data['attributes'] as $attribute => $term_name )    {        $taxonomy = 'pa_'.$attribute; // The attribute taxonomy        // If taxonomy doesn't exists we create it (Thanks to Carl F. Corneil)        if( ! taxonomy_exists( $taxonomy ) ){            register_taxonomy(                $taxonomy,               'product_variation',                array(                    'hierarchical' => false,                    'label' => ucfirst( $attribute ),                    'query_var' => true,                    'rewrite' => array( 'slug' => sanitize_title($attribute) ), // The base slug                ),            );        }        // Check if the Term name exist and if not we create it.        if( ! term_exists( $term_name, $taxonomy ) )            wp_insert_term( $term_name, $taxonomy ); // Create the term        $term_slug = get_term_by('name', $term_name, $taxonomy )->slug; // Get the term slug        // Get the post Terms names from the parent variable product.        $post_term_names =  wp_get_post_terms( $product_id, $taxonomy, array('fields' => 'names') );        // Check if the post term exist and if not we set it in the parent variable product.        if( ! in_array( $term_name, $post_term_names ) )            wp_set_post_terms( $product_id, $term_name, $taxonomy, true );        // Set/save the attribute data in the product variation        update_post_meta( $variation_id, 'attribute_'.$taxonomy, $term_slug );    }    ## Set/save all other data    // SKU    if( ! empty( $variation_data['sku'] ) )        $variation->set_sku( $variation_data['sku'] );    // Prices    if( empty( $variation_data['sale_price'] ) ){        $variation->set_price( $variation_data['regular_price'] );    } else {        $variation->set_price( $variation_data['sale_price'] );        $variation->set_sale_price( $variation_data['sale_price'] );    }    $variation->set_regular_price( $variation_data['regular_price'] );    // Stock    if( ! empty($variation_data['stock_qty']) ){        $variation->set_stock_quantity( $variation_data['stock_qty'] );        $variation->set_manage_stock(true);        $variation->set_stock_status('');    } else {        $variation->set_manage_stock(false);    }        $variation->set_weight(''); // weight (reseting)    $variation->save(); // Save the data}///////////////////////////////////////////////////////////////////////////////////////////////////////function crt_default_variation($pid, $dfvar){	$prod = wc_get_product($pid);	$attributes = $prod->get_attributes();        $defaultAttributes = array(        $dfvar    );        $changed=false;    foreach ($defaultAttributes as $key){        if (! isset($attributes[$key])){            $newattr = make_product_attribute($key);            if ($newattr){                $attributes[$key] = $newattr;            }            $changed = true;        }    }    if ($changed){        $prod->set_attributes($attributes);    }}function make_product_attribute($name) {    global $wc_product_attributes;    if ( isset($wc_product_attributes[$name]) ){        $newattr = new WC_Product_Attribute();        $newattr->set_id(1);  //any positive value is interpreted as is_taxonomy=true        $newattr->set_name($name);        $newattr->set_visible(true);        $newattr->set_variation(true);        //example of setting default value for item        if ($name=='pa_size'){            $terms = get_terms("pa_size");            foreach ($terms as $term) {                $term = get_term_by('slug', $term->name, $name);            }            $newattr->set_options(array(76, 77, 78, 79, 80)); //Global attribute term IDs previously added from Products->Attributes        }        return $newattr;    } else {        return false;    }}function get_variatype($sku_b, $brand=NULL){//	echo $sku_b.'<br>';	return 0;  ////  0 means simple product, 1 means LEFT, RIGHT, RTA, 2 means ASSEMBLED, RTA }?>