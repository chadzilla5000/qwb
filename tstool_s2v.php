<?phprequire_once('inc/_init.php');require_once('inc/functions/general.php');if($lghsh['Id'] == 0){	require_once('inc/functions/authorization.php'); 	$pgcontent = logform(); 	}include_once 'inc/functions.php';include_once 'wconfig.php';setlocale(LC_MONETARY, 'en_US');error_reporting(E_ALL | E_STRICT);//error_reporting(E_ERROR | E_WARNING | E_PARSE);///////////////////////////////////////////////////////////////////////////////$ln = 'madison-latte'; //(isset($_GET['br']))?$_GET['br']:NULL;$postp = NULL;$dflag = true;ini_set('memory_limit', '2048M');set_time_limit ( 1500 );$ofs = 0;$ppp  = -1;if(isset($_POST) AND sizeof($_POST)>0){	foreach($_POST as $k=>$sk){		if(preg_match('/(pr_)([\d]{1,9})/', $k, $m)){			$pid = $m[2];			wp_set_object_terms($pid, 'variable', 'product_type');//			wp_set_object_terms($pid, 'simple', 'product_type');			$prod = wc_get_product($pid);//echo $prod->get_type();//$prod->save();	echo '<a target="_blank" href="'.SITE_URL.'/wp-admin/post.php?post='.$pid.'&action=edit">'.$prod->get_sku() . '</a><br><br>';//wp_set_object_terms($pid, 'variable', 'product_type');//update_post_meta($pid, '_default_attributes', array($attr_name => 'SR'));// if ($prod->is_type( 'variable' )) { echo $prod->get_ID(). ' Variable<br>';  // $available_variations = $prod->get_available_variations();  // foreach ($available_variations as $k => $v) {	  // echo $k . 'will<br>';  // }// }//$product = wc_get_product($pid);$rpr = $prod->get_regular_price();//$attr = new WC_Product_Attribute();//$attr->set_id( 0 ); // -> SET to 0//$attr->set_name($attr_name);//$attr->set_options($attr_options);//$attr->set_position( 0 );//$attr->set_visible( 1 );//$attr->set_variation( 1 );//$prod->set_attributes(array($attr));$prod->save();$psku = $prod->get_sku();$option_ext = NULL;//*$attr_name = 'SRAssembly';$attr_options = array('SR','ASSEMBLED');///////////  Create Variations ///////////////////foreach( $attr_options as $option ){	$option_ext=($option=='ASSEMBLED')?'-ASM':'-'.$option;//	$option_ext='-'.$option;//echo $option;	$variation = new WC_Product_Variation();	$variation->set_parent_id($pid);	$variation->update_meta_data( $attr_name, $option );	$variation->set_attributes(array( $attr_name => $option ));	$variation->set_sku($psku.$option_ext);	$variation->set_regular_price($rpr);	$variation->save();	}wp_set_object_terms($pid, 'variable', 'product_type');wp_set_object_terms($pid, $attr_options, $attr_name );update_post_meta($pid, '_default_attributes', array($attr_name => 'SR'));///////////// */// $attr = new WC_Product_Attribute();// $attr->set_id( 0 ); // -> SET to 0// $attr->set_name($attr_name);// $attr->set_options($attr_options);// $attr->set_position( 0 );// $attr->set_visible( 1 );// $attr->set_variation( 1 );// $prod->set_attributes(array($attr));// $prod->save();// $variation_data =  array(    // 'attributes' => array(        // 'SRAssembly'  => 'SR',    // ),    // 'sku'           => $prod->get_sku().'-SR',    // 'regular_price' => '123.00',// );// The function to be run//$parent_id = 746; // Or get the variable product id dynamically//The variation data$variation_data =  array(    'attributes' => array(        'SRAssembly'  => 'SR',    ),    'sku'           => $prod->get_sku().'-SR',    'regular_price' => '1110',    'sale_price'    => '',);// The function to be runcreate_variation( $pid, $variation_data );//$vrt = 1;////////////create_product_vars( $pid, $vrt );					}	}echo '<a href="" name="bck" >go back</a>';}else{$wsiarr = getwsline($ln, $ppp, $ofs); /// Get items array from website by brand name (Sku, Title, Regular price, Sale price) /////////////////////*$sbt = '<form name="S2V" method="post" action=""><table>';$di=0;foreach($wsiarr as $it){	$probj = wc_get_product($it->ID);$drpr = ($probj->is_type( 'variable' ))?'-':$it->_regular_price;$vinp = ($probj->is_type( 'variable' ))?'':'<input type="checkbox" name="pr_'.$it->ID.'" value="1" />';	$sbt .= '<tr><td>'.++$di.'.</td><td><img style="height: 50px;" src="'.wp_get_attachment_url( $probj->get_image_id() ).'" /></td><td>'.$vinp. $it->ID. '</td><td>' . $it->_sku.'</td><td>' . $drpr .'</td></tr>';	}$sbt .= '</table><input type="submit" name="submit" value="Submit" /></form>';echo $sbt;}exit;///////// */$mcls = (isset($_GET['sel']))?$_GET['sel']:0;//drc($wsiarr);$sbm_bttn = NULL;if($mcls==2){ $sbm_bttn = '<input type="submit" name="sku_update" value="Update Sku" style="padding: 3px 9px;" />'; }$vnd2 = NULL;$vnd = 'TSG';	$mcls=0;	$inc = $inc_all = $in_1 = $in_2 = 0;$bdy = NULL;$chbchk = '';$chbdsb = 'disabled="disabled"';$buttoname = NULL;$vw=array();//if(isset($_GET['dm']) AND $_GET['dm']){       ////////////////////        Vendor -> Website //////////////////////////////////if(1){       ////////////////////        Vendor -> Website //////////////////////////////////	$vw[0] = 'Vendor'; $vw[1] = 'WCWeb';	if($mcls==1){ $sbm_bttn = '<input type="submit" name="sku_create" value="Create Sku" style="padding: 3px 9px;" />'; }	$tmquery = "SELECT * FROM cr_vndpl WHERE Vnd='$vnd' AND Ln='AX' ORDER BY ID ASC LIMIT ".$ofs_1.','.$ppp_1; 	$tresult = mysqli_query($dbh, $tmquery) or die (mysqli_error($dbh));	if($brand){		while ($tr = mysqli_fetch_array($tresult)) { $inc_all++;//if($inc_all>4100){break;}//			if(!$tr['VPr']>0) {continue;}			$fsku = preg_replace('/^AX/', 'AB', $tr['SkuWC']);echo $fsku.'- - -';			//			$ws = get_wsku($wsiarr, $fsku);			$ws = get_wsku($wsiarr, $fsku);//			if(!$ws AND !$dflag){continue;}			$vs = (isset($ws['ptype']))?(($ws['ptype'])?'Variable':'Simple'):NULL;			$st1 = (!$tr['Sku'])?'background: #fc9;':'';			$st2 = (isset($ws['sku']) AND ($tr['VPr']>0) AND ($ws['sku']) AND ($tr['VPr'] != $ws['rprice'] AND $tr['VPr'] != $ws['price']))?'background: #fc9;':'';			if($ws){ if($mcls==1){continue;} }			else{ $in_1++; }			if(!$ws OR $tr['VPr']==$ws['rprice'] OR $tr['VPr']==$ws['price']){ if($mcls==2){continue;}	}			else{ $in_2++; }			if($mcls==1 OR $mcls==2){$chbdsb='';}						if($ws){//			if(0){				//				$probj = $wc_adp->product_duplicate( wc_get_product($ws['id']) );//				echo $probj->id.'<br>';$r4 = array('ttl' => 'Lait Grey Shaker','slg' => 'lait-grey-shaker','prf' => 'AB-','cat' => 'Forevermark Lait Grey Shaker','tag' => 'lait-grey-shaker');$r2 = array('ttl' => 'Xterra Blue Shaker','slg' => 'xterra-blue-shaker','prf' => 'AX-','cat' => 'Forevermark Xterra Blue Shaker','tag' => 'xterra-blue-shaker');//lstdpl($probj, $r4, $r2);			}						$bdy.='<tr><td style="color: #ccc;">'.++$inc.'</td>	<td><input type="checkbox" name="vn_skubx[]" value="'.$tr['Sku'].'::'.$tr['Ln'].'::'.$tr['Title'].'::'.$tr['VPr'].'::'.$tr['UData'].'" '.$chbchk.' '.$chbdsb.' /></td>	<td>'.$tr['Sku'].'</td>	<td>'.$tr['Ln'].'</td>	<td style="text-align: right;">'.$tr['VPr'].'</td>	<td style="width: 150px; border-right: solid 2px #f00;">'.$tr['UData'].'</td>	<td style="width: 200px;color: #999;">'.$vs.'</td>	<td>'.((isset($ws))?$ws['id']:NULL).'</td>	<td><a target="_blank" href="'.SITE_URL.'/wp-admin/post.php?post='.$ws['id'].'&action=edit">'.((isset($ws))?$ws['sku']:NULL).'</a></td>	<td><a target="_blank" href="'.SITE_URL.'/product/'.$ws['slug'].'/">'.((isset($ws))?$ws['title']:NULL).'</a></td>	<td style="text-align: right; '.$st2.'">'.((isset($ws))?(($ws['rprice'])?$ws['rprice']:$ws['price']):NULL).'</td></tr>';				}  // Cycle end  ////////////////////////////////////////////////////////////////////		}	}/*	<td>'.$ws['id'].'</td>	<td>'.$ws['sku'].'</td>	<td>'.$ws['title'].'</td>	<td style="text-align: right; '.$st2.'">'.$ws['rprice'].'</td>*/else{                               ////////////////////        Website -> Vendor //////////////////////////////////	$st1 = $st2 = NULL;	$vw[0] = 'WCWeb'; $vw[1] = 'Vendor';	if($mcls==1){ $sbm_bttn = '<input type="submit" name="sku_unpub" value="Unpublish Sku" style="padding: 3px 9px;" />'; }	if($brand){		foreach($wsiarr as $wsarr){ $inc_all++; // Cycle begin //////////////////////////////////////////////////////*//if(preg_match('/(.*)([\d\d]{3})$/', $wsarr['sku']) OR preg_match('/(.*)([\d\d]{4})$/', $wsarr['sku']) OR preg_match('/(.*)([\d\d]{4})(X)([\d\d]{2})$/', $wsarr['sku'])){//if(preg_match('/(.*)(21)$/', $wsarr['sku'])){echo '<div><div style="width: 200px; float: left; color: #009;">'.++$in_1.' - '.$wsarr['sku'].'</div><div style="width: 200px; float: left;">'.$wsarr['title'].'</div>';//	$terms = get_the_terms( $wsarr['id'], 'product_tag' );	// foreach($terms as $trm){		// echo '<div style="float: left; margin: 0px 8px; color: #960;">'.$trm->name.'</div>';	// }echo '</div><div style="clear: both;"></div>';//}continue;////////  *//*       // Tool to clean "Sale Price"  if($inc_all>=0 AND $inc_all<2000){//if(0){		$prod = wc_get_product($wsarr['id']);$msmflag=0;//		$prod->set_sale_price( NULL );		if($prod->is_type('variable')){ //// For variables items  ////////////////////			foreach($prod->get_available_variations() as $var){//				echo $var->_get_meta('_regular_price').'<br>';				$vpr= new WC_Product_Variation( $var['variation_id'] );$reg_pr = $vpr->regular_price;$sal_pr = get_post_meta( $var['variation_id'], '_price', true);echo $vpr->sku.' : ';if($reg_pr != $sal_pr){$msmflag=1;			#Step 4: You have the data. Have fun :)			echo '<span style="color: #f00;">'.$reg_pr.' - - - '.$sal_pr.'</span>';}		echo '<br>';				//				update_post_meta( $var['variation_id'], '_sale_price', NULL );//		$prod->save();				}			}if($msmflag){$prod->save();}}*/					$varr = getvendorptbl($wsarr['sku']);if(!$varr){ $varr = getvendorptbl($wsarr['sku'].' NEW'); }			if($varr){ if($mcls==1){ continue; } }			else{ $in_1++; }//$gbg=( $wsarr->is_type( 'variable' ) )?'#fc0':'#000';			if(!$varr OR $varr['VPr']==$wsarr['rprice']){ if($mcls==2){continue;}}			else{ $in_2++; }			if($mcls==1 OR $mcls==2){$chbdsb='';}			$uprc = floatval( getrvprice($wsarr['id']));			///*			//	echo $wsarr['sku'].' --- '.$uprc . '<br>';		/// */			$st1 = (!$varr['Sku'])?'background: #fc9;':'';//			$st2 = (($varr['VPr']) AND ($wsarr['rprice']) AND ($wsarr['rprice']!=$varr['VPr']))?'background: #fc9;':'';			$st2 = (($varr['VPr']) AND ($uprc!=$varr['VPr']))?'background: #fc9;':'';			$bdy.='<tr><td style="color: #999;">'.++$inc.'</td>	<td><input type="checkbox" name="ws_skubx[]" value="'.$wsarr['id'].'::'.$varr['VPr'].'" '.$chbchk.' '.$chbdsb.' /></td>	<td style="'.$st1.'"><a target="_blank" href="'.SITE_URL.'/wp-admin/post.php?post='.$wsarr['id'].'&action=edit">'.$wsarr['sku'].'</a></td>	<td style="'.$st1.'"><a target="_blank" href="'.SITE_URL.'/product/'.$wsarr['slug'].'/">'.$wsarr['title'].'</a></td>	<td style="text-align: right; '.$st1.' '.$st2.'">'.$uprc.'</td>	<td style="width: 150px; border-right: solid 2px #f00;"></td>	<td style="width: 200px;color: #999;"></td>	<td></td>	<td>'.$varr['Sku'].'</td>	<td>'.$varr['VPr'].'</td>	<td></td></tr>';				}  // Cycle end  ////////////////////////////////////////////////////////////////////		}	}		$subcontent = ($dflag)?'<form method="post" name="bfmm31" action="#"><table id="LTbl" cellspacing="1"><tr><th><input type="number" style="width: 50px" name="numslct" value="16" /></th>	<th style="border: solid 1px #f60; border-width: 1px 0px 0px 2px; color: #f60;"><input type="checkbox" name="chckall" id="chckall" value="1" OnChange="chckallbx(this);" /></th>	<th style="border: solid 1px #f60; border-width: 1px 2px 0px 0px; color: #f60;" colspan="4">'.$vw[0].'</th>	<th></th>	<th style="border: solid 1px #f60; border-width: 1px 2px 0px 2px; color: #f60;" colspan="4">'.$vw[1].'</th></tr><tr><th></th>	<th></th>	<th></th>	<th></th>	<th></th>	<th></th>	<th>'.$sbm_bttn.'</th>	<th></th>	<th></th>	<th></th>	<th></th></tr>'.$bdy.'</table></form>':'';$chkdirection_optlist = array(	'<option value="1">Vendor -> Website</option>',	'<option value="0">Website -> Vendor</option>',);$br_optlist = array(	'<option value="">Select Vendor</option>',	'<option value="aurafina">Aurafina</option>',	'<option value="cnc">CNC</option>',	'<option value="cubitac">Cubitac</option>',	'<option value="feather-lodge">Feather Lodge</option>',	'<option value="forevermark">Forevermark</option>',	'<option value="ghi">GHI</option>',	'<option value="msi">MSI</option>',	'<option value="us-cabinet-depot">USCD</option>',);$pgtitle = '<h4>Prices synchronization</h4>';//$pgcontent = <<<EOD__$pgcontent = '<!-- Page content start --><style>#TopLn{	width: 100%;	height: 20px;	background: #009; 	background-image: linear-gradient(to left, #012, #09c); 	padding: 3px 0px; 	color: #fff;}.vcell{ padding: 1px 3px; background: #fff;}.vcell:first-child {	background: #555; color: #aa9; text-align: right;	min-width: 140px;			}#LTbl td{	padding: 2px 5px;	font: normal 11px "Tahoma";}#LTbl tr:nth-child(odd){  background-color: #eee;}#rsrchdirection:hover{	text-decoration: underline;}</style><div id="TopLn"><div style="float: left;"><a style="margin-left: 35px; color: #fee;" OnClick="return pickurl(0);" href="cmpUVW.php?dm=1&sel=0">All ('.$inc_all.')</a><a style="margin-left: 35px; color: #fee;" OnClick="return pickurl(1);" href="cmpUVW.php?dm=1&sel=1">Not Avail. ('.$in_1.')</a><a style="margin-left: 35px; color: #fee;" OnClick="return pickurl(2);" href="cmpUVW.php?dm=1&sel=2">Price MSM. ('.$in_2.')</a><select style="margin-left: 35px;" name="parsebrand" id="parsebrand" OnChange="prsbrand(this);">'.getopts($br_optlist, $brand).'</select></div><div style="float: left; margin-left: 35px; cursor: pointer" title="Direction switch" id="rsrchdirection" OnClick="sw_direction();">'.((isset($_GET['dm']) AND $_GET['dm'])?'Vendor-Website':'Website-Vendor').'</div><div style="float: right; margin-right: 35px;"><a href="unipricel.php">U-Price</a></div><div style="clear: both;"></div></div>'.(($postp)?'<div style="margin-top: 20px;">Items posted:</div>'.$postp:'').''.((isset($reqntnt))?$reqntnt:'').''.$subcontent.''.(($postp)?'<div style="margin-top: 50px;">Items posted:</div>'.$postp:'').'<script>function pickurl(s){var hr = window.location.href;	hr = hr.replace(/\&sel=\d/g, "\&sel="+s);	window.location.href = hr;return false;	}function prsdirection_______(o){	var hr = window.location.href;	if(hr.match(/\?dm=\d/)){ hr = hr.replace(/\?dm=\d/, "\?dm="+o.value); }	window.location.href = hr;}function sw_direction(){var hr = window.location.href;var d = document.getElementById("rsrchdirection");var val;	if(d.innerHTML == "Vendor-Website") { val=0; d.innerHTML = "Website-Vendor"; }	else                                { val=1; d.innerHTML = "Vendor-Website"; }	if(hr.match(/\?dm=\d/))	{ hr = hr.replace(/\?dm=\d/, "\?dm="+val); }	else 					{ hr = hr+"?dm=0"; }	window.location.href = hr;}function prsbrand(o){	var hr = window.location.href;	if(hr.match(/\&br=[\w\-].*/)){ hr = hr.replace(/\&br=[\w\-].*/, "\&br="+o.value); }	else { hr += "\&br="+o.value;}	window.location.href = hr;}document.getElementById("chckall").onclick = function() {var checkboxes = document.querySelectorAll(\'input[type="checkbox"]\');var bi = 0;var b2 = bfmm31.numslct.value;for(var checkbox of checkboxes) { 	if(b2>0 && bi>b2){ return; } 	bi++;	if(!checkbox.disabled){		checkbox.checked = this.checked;		}	}}</script><!-- Page content end -->';$page_title       = 'Unified Management System - Prices';$hsct = 'pl2snch';$page_description = '';$keywords         = '';$head_ext         = '';require_once('inc/_shell.php'); ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////function get_wsku($wsiarr, $sku) {	foreach($wsiarr as $wi){		$skt = preg_replace('/ NEW/','',$sku);		if($skt == $wi['sku']){	return $wi;	}		}	return null;}function getvendorptbl($s){ global $dbh;	return mysqli_fetch_assoc(mysqli_query($dbh, "SELECT Sku, VPr FROM cr_vndpl WHERE SkuWC='$s'"));}function lstdpl($prod, $rp4, $rp2){$pid = $prod->id;$pcat = wc_get_product_terms($pid, 'product_cat');$ptag = wc_get_product_terms($pid, 'product_tag');$catarr = replarray($pcat, $rp4['cat'], $rp2['cat']);$tagarr = replarray($ptag, $rp4['tag'], $rp2['tag']);$ir['ttl'] = preg_replace("/$rp4[ttl]/", $rp2['ttl'], preg_replace('/ \(Copy\)/','', $prod->name)); // nameoff($pobj->name);$ir['slg'] = preg_replace('/[-]{2,7}/', '-', strtolower( preg_replace('/\s/','-', $ir['ttl']))) ; // slugoff($arr['ttl']);$ir['sku'] = preg_replace("/^$rp4[prf]/", $rp2['prf'], preg_replace('/-\d$/', '', $prod->sku)); //skuoff($pobj->sku);$ir['catarr']  = $catarr;$ir['tagarr']  = $tagarr;echo 	$ir['sku'] . ' : ' . 	$ir['ttl'] . ' : ' . 	$ir['slg'] . ' : ' .'<br>';chngrplmnt($prod, $ir);		foreach($catarr as $ct){ echo $ct.', ';} echo '<br>';	foreach($tagarr as $ft){ echo $ft.', ';} echo '<br>';			return;}function chngrplmnt($prod, $ir){$pid = $prod->id;wp_set_object_terms( $pid, $ir['catarr'], 'product_cat' );wp_set_object_terms( $pid, $ir['tagarr'], 'product_tag' );$prod->set_name($ir['ttl']);$prod->set_sku($ir['sku']);$prod->set_price(NULL);$prod->save();//chngvrplmnt($pid, $ir);$uargs = array(	'ID' => $pid, 	'post_slug'     => $ir['slg'],	'post_content'  => $ir['ttl'],	'post_status'   => 'publish',	);		wp_update_post( $uargs ); return;	}function replarray($parr, $nsrch, $nrplc){	$r = array();	// $key = array_search($nsrch, $parr);	// echo $parr['name'];	// if($key){ $parr[$key] = $nrplc; } foreach($parr as $k=>$v){	if($v->name==$nsrch){ array_push($r, $nrplc); }	else { array_push($r, $v->name); }	}	return $r;}function getwsline($line, $ppp, $offs){if(!$line){return NULL;}$inc=0;	$itarr = array();$args = array(	'post_type'             => 'product',	'post_status'           => 'publish',//	'fields' => 'ids',//	'fields' => 'sku',	'ignore_sticky_posts'   => 1,	'offset' 				=> $offs,	'posts_per_page'        => $ppp,	'tax_query' => array(		array(			'taxonomy' => 'product_tag',			'field' => 'slug',			'terms' => $line,			'operator' => 'IN',			)		),	);//$items = get_posts_fields( $args ); $items = get_posts( $args ); return $items; foreach($items as $ii){	$prod = wc_get_product($ii->ID);/*		$prod = wc_get_product($ii->ID);if( $prod->is_type('variable') ){//	$vars = $prod->get_children();	foreach($prod->get_available_variations() as $var){				$itarr[$inc]['id']     = $var->ID;		$itarr[$inc]['sku']    = $var->sku;		$itarr[$inc]['title']  = $var->post_title;		$itarr[$inc]['rprice'] = $var->_regular_price;		$itarr[$inc]['price']  = $var->_price;		$inc++;		}		}else{/////////////	*/		$itarr[$inc]['id']     = $ii->ID;	$itarr[$inc]['sku']    = $ii->_sku;	$itarr[$inc]['slug']   = $ii->post_name;	$itarr[$inc]['title']  = $ii->post_title;	$itarr[$inc]['rprice'] = $ii->_regular_price;	$itarr[$inc]['price']  = $ii->_price;	$itarr[$inc]['ptype']  = ( $prod->is_type('variable') )?1:0; // $ii->get_type();	$itarr[$inc]['stts']   = $ii->post_status;	$inc++;// }	//	echo $ii->_sku.'<br>';	}	return $itarr;}function create_product_variation_______( $product_id, $variation_data ){    // Get the Variable product object (parent)    $product = wc_get_product($product_id);    $variation_post = array(        'post_title'  => $product->get_name(),        'post_name'   => 'product-'.$product_id.'-variation',        'post_status' => 'publish',        'post_parent' => $product_id,        'post_type'   => 'product_variation',        'guid'        => $product->get_permalink()    );    // Creating the product variation    $variation_id = wp_insert_post( $variation_post );    // Get an instance of the WC_Product_Variation object    $variation = new WC_Product_Variation( $variation_id );    // Iterating through the variations attributes    foreach ($variation_data['attributes'] as $attribute => $term_name )    {        $taxonomy = 'pa_'.$attribute; // The attribute taxonomy        // If taxonomy doesn't exists we create it (Thanks to Carl F. Corneil)        if( ! taxonomy_exists( $taxonomy ) ){            register_taxonomy(                $taxonomy,               'product_variation',                array(                    'hierarchical' => false,                    'label' => ucfirst( $attribute ),                    'query_var' => true,                    'rewrite' => array( 'slug' => sanitize_title($attribute) ), // The base slug                ),            );        }        // Check if the Term name exist and if not we create it.        if( ! term_exists( $term_name, $taxonomy ) )            wp_insert_term( $term_name, $taxonomy ); // Create the term        $term_slug = get_term_by('name', $term_name, $taxonomy )->slug; // Get the term slug        // Get the post Terms names from the parent variable product.        $post_term_names =  wp_get_post_terms( $product_id, $taxonomy, array('fields' => 'names') );        // Check if the post term exist and if not we set it in the parent variable product.        if( ! in_array( $term_name, $post_term_names ) )            wp_set_post_terms( $product_id, $term_name, $taxonomy, true );        // Set/save the attribute data in the product variation        update_post_meta( $variation_id, 'attribute_'.$taxonomy, $term_slug );    }    ## Set/save all other data    // SKU    if( ! empty( $variation_data['sku'] ) )        $variation->set_sku( $variation_data['sku'] );    // Prices    if( empty( $variation_data['sale_price'] ) ){        $variation->set_price( $variation_data['regular_price'] );    } else {        $variation->set_price( $variation_data['sale_price'] );        $variation->set_sale_price( $variation_data['sale_price'] );    }    $variation->set_regular_price( $variation_data['regular_price'] );    // Stock    if( ! empty($variation_data['stock_qty']) ){        $variation->set_stock_quantity( $variation_data['stock_qty'] );        $variation->set_manage_stock(true);        $variation->set_stock_status('');    } else {        $variation->set_manage_stock(false);    }        $variation->set_weight(''); // weight (reseting)    $variation->save(); // Save the data}function create_product_vars($pid, $vr=0){if(!$vr){return;}$attr_name = $default_opt = NULL;$attr_options = NULL;if($vr==1){ $attr_name = 'SRAssembly';	$attr_options = array('SR','ASSEMBLED');	}if($vr==2){ $attr_name = 'SRAssemblyLR';	$attr_options = array('RTA','LEFT','RIGHT');	}if($vr==3){ $attr_name = 'AssemblyRTA';	$attr_options = array('RTA','ASSEMBLED');	}	//$product = new WC_Product_Variable($pid);//$product->save();// $product->set_sku( $sku );// $product->post_title ='THe Post var product';$product = wc_get_product($pid);$rpr = $product->get_regular_price();$attr = new WC_Product_Attribute();$attr->set_id( 0 ); // -> SET to 0$attr->set_name($attr_name);$attr->set_options($attr_options);$attr->set_position( 1 );$attr->set_visible( 1 );$attr->set_variation( 1 );$product->set_attributes(array($attr));$product->save();$psku = $product->get_sku();$option_ext = NULL;///////////  Create Variations ///////////////////foreach( $attr_options as $option ){	$option_ext=($option=='ASSEMBLED')?'-ASM':'-'.$option;//	$option_ext='-'.$option;//echo $option;	//*	$variation = new WC_Product_Variation();	$variation->set_parent_id($pid);	$variation->update_meta_data( $attr_name, $option );	$variation->set_attributes(array( $attr_name => $option ));	$variation->set_sku($psku.$option_ext);	$variation->set_regular_price($rpr);	$variation->save();	///////// */	}wp_set_object_terms($pid, 'variable', 'product_type');update_post_meta($pid, '_default_attributes', array($attr_name => 'SR'));return; // $product;}function create_product_variation( $product_id, $variation_data ){    // Get the Variable product object (parent)    $product = wc_get_product($product_id);    $variation_post = array(        'post_title'  => $product->get_name(),        'post_name'   => 'product-'.$product_id.'-variation',        'post_status' => 'publish',        'post_parent' => $product_id,        'post_type'   => 'product_variation',        'guid'        => $product->get_permalink()    );    // Creating the product variation    $variation_id = wp_insert_post( $variation_post );    // Get an instance of the WC_Product_Variation object    $variation = new WC_Product_Variation( $variation_id );    // Iterating through the variations attributes    foreach ($variation_data['attributes'] as $attribute => $term_name )    {        $taxonomy = 'pa_'.$attribute; // The attribute taxonomy        // If taxonomy doesn't exists we create it (Thanks to Carl F. Corneil)        if( ! taxonomy_exists( $taxonomy ) ){            register_taxonomy(                $taxonomy,               'product_variation',                array(                    'hierarchical' => false,                    'label' => ucfirst( $attribute ),                    'query_var' => true,                    'rewrite' => array( 'slug' => sanitize_title($attribute) ), // The base slug                ),            );        }        // Check if the Term name exist and if not we create it.        if( ! term_exists( $term_name, $taxonomy ) )            wp_insert_term( $term_name, $taxonomy ); // Create the term        $term_slug = get_term_by('name', $term_name, $taxonomy )->slug; // Get the term slug        // Get the post Terms names from the parent variable product.        $post_term_names =  wp_get_post_terms( $product_id, $taxonomy, array('fields' => 'names') );        // Check if the post term exist and if not we set it in the parent variable product.        if( ! in_array( $term_name, $post_term_names ) )            wp_set_post_terms( $product_id, $term_name, $taxonomy, true );        // Set/save the attribute data in the product variation        update_post_meta( $variation_id, 'attribute_'.$taxonomy, $term_slug );    }    ## Set/save all other data    // SKU    if( ! empty( $variation_data['sku'] ) )        $variation->set_sku( $variation_data['sku'] );    // Prices    if( empty( $variation_data['sale_price'] ) ){        $variation->set_price( $variation_data['regular_price'] );    } else {        $variation->set_price( $variation_data['sale_price'] );        $variation->set_sale_price( $variation_data['sale_price'] );    }    $variation->set_regular_price( $variation_data['regular_price'] );    // Stock    if( ! empty($variation_data['stock_qty']) ){        $variation->set_stock_quantity( $variation_data['stock_qty'] );        $variation->set_manage_stock(true);        $variation->set_stock_status('');    } else {        $variation->set_manage_stock(false);    }        $variation->set_weight(''); // weight (reseting)    $variation->save(); // Save the data	return;}function create_variation( $product_id, $variation_data ){$product = wc_get_product($product_id);$variation_post = array(        'post_title'  => $product->get_title(),        'post_name'   => 'product-'.$product_id.'-variation',     'post_status' => 'publish',     'post_parent' => $product_id,        'post_type'   => 'product_variation',     'guid'    => $product->get_permalink());$variation_id = wp_insert_post( $variation_post );$variation = new WC_Product_Variation( $variation_id );foreach ($variation_data['attributes'] as $attribute => $term_name ){     $taxonomy = 'pa_'.$attribute;      if( ! taxonomy_exists( $taxonomy ) ){            register_taxonomy(                $taxonomy,                'product_variation',                array(                    'hierarchical' => false,                    'label' => ucfirst( $attribute ),                    'query_var' => true,                    'rewrite' => array( 'slug' => sanitize_title($attribute) ),              )         );     }     if( ! term_exists( $term_name, $taxonomy ) )            wp_insert_term( $term_name, $taxonomy );      $term_slug = get_term_by('name', $term_name, $taxonomy )->slug;         $post_term_names =  wp_get_post_terms( $product_id, $taxonomy, array('fields' => 'names') );     if( ! in_array( $term_name, $post_term_names ) )            wp_set_post_terms( $product_id, $term_name, $taxonomy, true );        update_post_meta( $variation_id, 'attribute_'.$taxonomy, $term_slug );}if( ! empty( $variation_data['sku'] ) )        $variation->set_sku( $variation_data['sku'] );if( empty( $variation_data['sale_price'] ) ){        $variation->set_price( $variation_data['regular_price'] );} else {        $variation->set_price( $variation_data['sale_price'] );        $variation->set_sale_price( $variation_data['sale_price'] );}    $variation->set_regular_price( $variation_data['regular_price'] );if( ! empty($variation_data['stock_qty']) ){        $variation->set_stock_quantity( $variation_data['stock_qty'] );        $variation->set_manage_stock(true);        $variation->set_stock_status('');} else {        $variation->set_manage_stock(false);}    $variation->set_weight('');     $variation->save(); }?>